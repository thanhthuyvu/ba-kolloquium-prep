[{"cyclomatic":2,"cyclomaticDensity":15.385,"halstead":{"bugs":0.089,"difficulty":9.882,"effort":2640.456,"length":55,"time":146.692,"vocabulary":29,"volume":267.189,"operands":{"distinct":17,"total":28,"identifiers":["stdout","run","GIT"," --version","gitVersion","trim","match","/^git version (?<version>\\d+\\.\\d+\\.\\d+)/","groups","version","null","Error","Unable to parse git version from string \"","\"","semver","gte","\"2.28.0\""]},"operators":{"distinct":12,"total":27,"identifiers":["const","=","{}","()","``","${}",".","if","==","throw","new","return"]}},"paramCount":0,"sloc":{"logical":13,"physical":14},"errors":[],"lineEnd":31,"lineStart":18,"name":"<anon method-1>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":2,"cyclomaticDensity":100,"halstead":{"bugs":0.024,"difficulty":3.75,"effort":271.274,"length":19,"time":15.071,"vocabulary":14,"volume":72.34,"operands":{"distinct":8,"total":10,"identifiers":["initCommand","gitVersionSupportsInitialBranch","GIT","mainBranchName"," init --initial-branch="," init","run","dir"]},"operators":{"distinct":6,"total":9,"identifiers":["const","=",":?","``","${}","()"]}},"paramCount":1,"sloc":{"logical":2,"physical":7},"errors":[],"lineEnd":41,"lineStart":35,"name":"gitInit","paramNames":["dir"],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":50,"halstead":{"bugs":0.002,"difficulty":0.5,"effort":2.377,"length":3,"time":0.132,"vocabulary":3,"volume":4.755,"operands":{"distinct":2,"total":2,"identifiers":["cleanup","DIR"]},"operators":{"distinct":1,"total":1,"identifiers":["()"]}},"paramCount":0,"sloc":{"logical":2,"physical":1},"errors":[],"lineEnd":43,"lineStart":43,"name":"<anon method-2>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":50,"halstead":{"bugs":0.002,"difficulty":0.5,"effort":2.377,"length":3,"time":0.132,"vocabulary":3,"volume":4.755,"operands":{"distinct":2,"total":2,"identifiers":["cleanup","DIR"]},"operators":{"distinct":1,"total":1,"identifiers":["()"]}},"paramCount":0,"sloc":{"logical":2,"physical":1},"errors":[],"lineEnd":44,"lineStart":44,"name":"<anon method-3>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":6.25,"halstead":{"bugs":0.124,"difficulty":7.38,"effort":2740.82,"length":73,"time":152.268,"vocabulary":34,"volume":371.385,"operands":{"distinct":25,"total":41,"identifiers":["writeFiles","DIR","\".watchmanconfig\"","\"\"","\"__tests__/file1.test.js\"","\"require('../file1'); test('file1', () => {});\"","\"file1.js\"","\"module.exports = {}\"","\"package.json\"","\"{}\"","gitInit","run","GIT"," add ."," commit --no-gpg-sign -m \"first\"","stdout","runJest","\"-o\"","expect","toMatch","/No tests found related to files changed since last commit./","mainBranchName","--changedSince=","No tests found related to files changed since \"","\"."]},"operators":{"distinct":9,"total":32,"identifiers":["()","{}",":","``","${}","let","=",".","[]"]}},"paramCount":0,"sloc":{"logical":16,"physical":22},"errors":[],"lineEnd":67,"lineStart":46,"name":"<anon method-4>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":1.754,"halstead":{"bugs":0.38,"difficulty":15.395,"effort":17539.722,"length":204,"time":974.429,"vocabulary":48,"volume":1139.332,"operands":{"distinct":38,"total":117,"identifiers":["writeFiles","DIR","\".watchmanconfig\"","\"\"","\"__tests__/file1.test.js\"","\"require('../file1'); test('file1', () => {});\"","\"file1.js\"","\"module.exports = {}\"","\"package.json\"","\"{}\"","stderr","stdout","runJest","\"-o\"","expect","toMatch","/Jest can only find uncommitted changed files/","gitInit","run","GIT"," add ."," commit --no-gpg-sign -m \"first\"","\"No tests found related to files\"","\"--lastCommit\"","/PASS __tests__(\\/|\\\\)file1.test.js/","\"__tests__/file2.test.js\"","\"require('../file2'); test('file2', () => {});\"","\"__tests__/file3.test.js\"","\"require('../file3'); test('file3', () => {});\"","\"file2.js\"","\"file3.js\"","\"require('./file2')\"","not","/PASS __tests__(\\/|\\\\)file2.test.js/","/PASS __tests__(\\/|\\\\)file3.test.js/"," commit --no-gpg-sign -m \"second\"","\"module.exports = {modified: true}\"","/PASS __tests__(\\/|\\\\)file1.test.j/"]},"operators":{"distinct":10,"total":87,"identifiers":["()","{}",":","let","=","[]",".","``","${}",","]}},"paramCount":0,"sloc":{"logical":57,"physical":51},"errors":[],"lineEnd":119,"lineStart":69,"name":"<anon method-5>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":3.226,"halstead":{"bugs":0.195,"difficulty":8.855,"effort":5183.73,"length":110,"time":287.985,"vocabulary":40,"volume":585.412,"operands":{"distinct":31,"total":61,"identifiers":["writeFiles","DIR","\"__tests__/a.test.js\"","\n    require('../a');\n    require('../b');\n    test('a', () => expect(1).toBe(1));\n  ","\"__tests__/b.test.js\"","\n    require('../b');\n    test('b', () => expect(1).toBe(1));\n  ","\"a.js\"","\"module.exports = {}\"","\"b.js\"","\"package.json\"","JSON","stringify","jest","collectCoverage","true","coverageReporters","\"text\"","testEnvironment","\"node\"","gitInit","run","GIT"," add ."," commit --no-gpg-sign -m \"first\"","\"module.exports = {modified: true}\"","stdout","runJest","expect","toMatch","\"-o\"","not"]},"operators":{"distinct":9,"total":49,"identifiers":["()","{}",":","``",".","[]","${}","let","="]}},"paramCount":0,"sloc":{"logical":31,"physical":44},"errors":[],"lineEnd":164,"lineStart":121,"name":"<anon method-6>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":5.263,"halstead":{"bugs":0.126,"difficulty":6.5,"effort":2453.129,"length":73,"time":136.285,"vocabulary":36,"volume":377.405,"operands":{"distinct":27,"total":39,"identifiers":["writeFiles","DIR","\"__tests__/a.test.js\"","\n    require('../a');\n    test('a1', () => expect(1).toBe(1));\n  ","\"a.js\"","\"module.exports = {}\"","\"package.json\"","JSON","stringify","jest","collectCoverage","true","coverageReporters","\"text\"","testEnvironment","\"node\"","gitInit","run","GIT"," add ."," commit --no-gpg-sign -m \"first\"","\n    require('../a');\n    test('a1', () => expect(1).toBe(1));\n    test('a2', () => expect(2).toBe(2));\n  ","stdout","runJest","\"--only-changed\"","expect","toMatch"]},"operators":{"distinct":9,"total":34,"identifiers":["()","{}",":","``",".","[]","${}","const","="]}},"paramCount":0,"sloc":{"logical":19,"physical":32},"errors":[],"lineEnd":197,"lineStart":166,"name":"<anon method-7>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":3.704,"halstead":{"bugs":0.183,"difficulty":9.667,"effort":5298.866,"length":103,"time":294.381,"vocabulary":40,"volume":548.159,"operands":{"distinct":30,"total":58,"identifiers":["writeFiles","DIR","\"a.js\"","\"module.exports = {}\"","\"b.test.js\"","\"package.json\"","JSON","stringify","name","\"original name\"","gitInit","run","GIT"," add ."," commit --no-gpg-sign -m \"first\"","\"require(\"./package.json\"); it(\"passes\", () => {})\"","\"new name\"","stderr","stdout","exitCode","runJest","\"-o\"","\"--coverage\"","expect","toEqual","not","stringContaining","\"Failed to collect coverage from\"","toBe","0"]},"operators":{"distinct":10,"total":45,"identifiers":["()","{}",":",".","``","${}","const","=","[]",","]}},"paramCount":0,"sloc":{"logical":27,"physical":23},"errors":[],"lineEnd":221,"lineStart":199,"name":"<anon method-8>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":4.348,"halstead":{"bugs":0.164,"difficulty":8.226,"effort":4054.457,"length":92,"time":225.248,"vocabulary":41,"volume":492.895,"operands":{"distinct":31,"total":51,"identifiers":["writeFiles","DIR","\"a.js\"","\"module.exports = {}\"","\"b.test.js\"","\"package.json\"","JSON","stringify","jest","collectCoverageFrom","name","\"original name\"","gitInit","run","GIT"," add ."," commit --no-gpg-sign -m \"first\""," checkout -b new-branch","\"it(\"passes\", () => {expect(1).toBe(1)})\"","stderr","exitCode","runJest","\"-o\"","\"--coverage\"","expect","toEqual","not","stringContaining","\"Failed to collect coverage from\"","toBe","0"]},"operators":{"distinct":10,"total":41,"identifiers":["()","{}",":",".","[]","``","${}","const","=",","]}},"paramCount":0,"sloc":{"logical":23,"physical":25},"errors":[],"lineEnd":247,"lineStart":223,"name":"<anon method-9>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":1.22,"halstead":{"bugs":0.529,"difficulty":16.261,"effort":25800.832,"length":277,"time":1433.38,"vocabulary":53,"volume":1586.634,"operands":{"distinct":44,"total":159,"identifiers":["writeFiles","DIR","\".watchmanconfig\"","\"\"","\"__tests__/file1.test.js\"","\"require('../file1'); test('file1', () => {});\"","\"file1.js\"","\"module.exports = {}\"","\"package.json\"","JSON","stringify","jest","onlyChanged","true","stderr","stdout","runJest","expect","toMatch","/Jest can only find uncommitted changed files/","gitInit","run","GIT"," add ."," commit --no-gpg-sign -m \"first\"","\"No tests found related to files\"","not","\"Unknown option \"onlyChanged\" with value true was found\"","\"--lastCommit\"","/PASS __tests__(\\/|\\\\)file1.test.js/","\"__tests__/file2.test.js\"","\"require('../file2'); test('file2', () => {});\"","\"__tests__/file3.test.js\"","\"require('../file3'); test('file3', () => {});\"","\"file2.js\"","\"file3.js\"","\"require('./file2')\"","/PASS __tests__(\\/|\\\\)file2.test.js/","/PASS __tests__(\\/|\\\\)file3.test.js/"," commit --no-gpg-sign -m \"second\"","\"file2.test.js\"","\"1 total\"","\"module.exports = {modified: true}\"","\"--all\""]},"operators":{"distinct":9,"total":118,"identifiers":["()","{}",":",".","let","=","``","${}","[]"]}},"paramCount":0,"sloc":{"logical":82,"physical":64},"errors":[],"lineEnd":312,"lineStart":249,"name":"<anon method-10>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":2.128,"halstead":{"bugs":0.318,"difficulty":12.895,"effort":12314.842,"length":171,"time":684.158,"vocabulary":48,"volume":955.029,"operands":{"distinct":38,"total":98,"identifiers":["writeFiles","DIR","\".watchmanconfig\"","\"\"","\"__tests__/file1.test.js\"","\"require('../file1'); test('file1', () => {});\"","\"file1.js\"","\"module.exports = {}\"","\"package.json\"","JSON","stringify","jest","testEnvironment","\"node\"","run","HG"," init"," add ."," commit -m \"test\"","stdout","stderr","runJest","\"-o\"","expect","toMatch","\"No tests found related to files changed\"","\"__tests__/file2.test.js\"","\"require('../file2'); test('file2', () => {});\"","\"file2.js\"","\"file3.js\"","\"require('./file2')\"","/PASS __tests__(\\/|\\\\)file2.test.js/"," commit -m \"test2\"","\"__tests__/file3.test.js\"","\"require('../file3'); test('file3', () => {});\"","/PASS __tests__(\\/|\\\\)file3.test.js/","not","\"--changedFilesWithAncestor\""]},"operators":{"distinct":10,"total":73,"identifiers":["()","{}",":",".","``","${}","let","=","[]",","]}},"paramCount":0,"sloc":{"logical":47,"physical":42},"errors":[],"lineEnd":355,"lineStart":314,"name":"<anon method-11>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":2,"cyclomaticDensity":6.061,"halstead":{"bugs":0.243,"difficulty":10.047,"effort":7318.395,"length":126,"time":406.577,"vocabulary":55,"volume":728.451,"operands":{"distinct":43,"total":72,"identifiers":["process","platform","\"win32\"","modifiedDIR","path","resolve","DIR","\"outer_dir\"","\"inner_dir\"","incorrectModifiedDIR","\"OUTER_dir\"","writeFiles","\".watchmanconfig\"","\"\"","\"__tests__/file1.test.js\"","\"require('../file1'); test('file1', () => {});\"","\"file1.js\"","\"module.exports = {}\"","\"package.json\"","\"{}\"","gitInit","run","GIT"," add ."," commit --no-gpg-sign -m \"first\"","stdout","runJest","\"-o\"","expect","toMatch","\"No tests found related to files\"","\"__tests__/file2.test.js\"","\"require('../file2'); test('file2', () => {});\"","\"__tests__/file3.test.js\"","\"require('../file3'); test('file3', () => {});\"","\"file2.js\"","\"file3.js\"","\"require('./file2')\"","stderr","not","/PASS __tests__(\\/|\\\\)file1.test.js/","/PASS __tests__(\\/|\\\\)file2.test.js/","/PASS __tests__(\\/|\\\\)file3.test.js/"]},"operators":{"distinct":12,"total":54,"identifiers":["if","!==",".","return","const","=","()","{}",":","``","${}","[]"]}},"paramCount":0,"sloc":{"logical":33,"physical":36},"errors":[],"lineEnd":392,"lineStart":357,"name":"<anon method-12>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]}]