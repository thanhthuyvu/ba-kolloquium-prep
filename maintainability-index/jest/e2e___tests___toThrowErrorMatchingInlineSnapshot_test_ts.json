[{"cyclomatic":1,"cyclomaticDensity":33.333,"halstead":{"bugs":0.012,"difficulty":1,"effort":34.869,"length":11,"time":1.937,"vocabulary":9,"volume":34.869,"operands":{"distinct":7,"total":7,"identifiers":["fs","readFileSync","path","join","TESTS_DIR","filename","\"utf8\""]},"operators":{"distinct":2,"total":4,"identifiers":["()","."]}},"paramCount":1,"sloc":{"logical":3,"physical":2},"errors":[],"lineEnd":20,"lineStart":19,"name":"<anon method-1>","paramNames":["filename"],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":50,"halstead":{"bugs":0.002,"difficulty":0.5,"effort":2.377,"length":3,"time":0.132,"vocabulary":3,"volume":4.755,"operands":{"distinct":2,"total":2,"identifiers":["cleanup","TESTS_DIR"]},"operators":{"distinct":1,"total":1,"identifiers":["()"]}},"paramCount":0,"sloc":{"logical":2,"physical":1},"errors":[],"lineEnd":22,"lineStart":22,"name":"<anon method-2>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":50,"halstead":{"bugs":0.002,"difficulty":0.5,"effort":2.377,"length":3,"time":0.132,"vocabulary":3,"volume":4.755,"operands":{"distinct":2,"total":2,"identifiers":["cleanup","TESTS_DIR"]},"operators":{"distinct":1,"total":1,"identifiers":["()"]}},"paramCount":0,"sloc":{"logical":2,"physical":1},"errors":[],"lineEnd":23,"lineStart":23,"name":"<anon method-3>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":5.556,"halstead":{"bugs":0.102,"difficulty":6.75,"effort":2073.331,"length":62,"time":115.185,"vocabulary":31,"volume":307.16,"operands":{"distinct":22,"total":33,"identifiers":["filename","\"works-fine-when-function-throws-error.test.js\"","template","makeTemplate","\n    test('works fine when function throws error', () => {\n      expect(() => {\n        throw new Error('apple');\n      })\n        .toThrowErrorMatchingInlineSnapshot();\n    });\n  ","writeFiles","TESTS_DIR","stderr","exitCode","runJest","DIR","\"-w=1\"","\"--ci=false\"","fileAfter","readFile","expect","toMatch","\"1 snapshot written from 1 test suite.\"","toMatchSnapshot","\"initial write\"","toBe","0"]},"operators":{"distinct":9,"total":29,"identifiers":["const","=","()","``","{}",":","[]",",","."]}},"paramCount":0,"sloc":{"logical":18,"physical":20},"errors":[],"lineEnd":44,"lineStart":25,"name":"<anon method-4>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":5.556,"halstead":{"bugs":0.107,"difficulty":6.652,"effort":2128.696,"length":64,"time":118.261,"vocabulary":32,"volume":320,"operands":{"distinct":23,"total":34,"identifiers":["filename","\"updates-existing-snapshot.test.js\"","template","makeTemplate","\n    test('updates existing snapshot', () => {\n      expect(() => {\n        throw new Error('apple');\n      })\n        .toThrowErrorMatchingInlineSnapshot(`\"banana\"`);\n    });\n  ","writeFiles","TESTS_DIR","stderr","exitCode","runJest","DIR","\"-w=1\"","\"--ci=false\"","\"-u\"","fileAfter","readFile","expect","toMatch","\"1 snapshot updated from 1 test suite.\"","toMatchSnapshot","\"updated snapshot\"","toBe","0"]},"operators":{"distinct":9,"total":30,"identifiers":["const","=","()","``","{}",":","[]",",","."]}},"paramCount":0,"sloc":{"logical":18,"physical":25},"errors":[],"lineEnd":70,"lineStart":46,"name":"<anon method-5>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":7.143,"halstead":{"bugs":0.078,"difficulty":6.5,"effort":1514.432,"length":49,"time":84.135,"vocabulary":27,"volume":232.989,"operands":{"distinct":18,"total":26,"identifiers":["filename","\"cannot-be-used-with-not.test.js\"","template","makeTemplate","\n    test('cannot be used with .not', () => {\n      expect(() => { throw new Error('apple'); })\n        .not\n        .toThrowErrorMatchingInlineSnapshot();\n    });\n  ","writeFiles","TESTS_DIR","stderr","exitCode","runJest","DIR","\"-w=1\"","\"--ci=false\"","expect","toMatch","\"Snapshot matchers cannot be used with not\"","toBe","1"]},"operators":{"distinct":9,"total":23,"identifiers":["const","=","()","``","{}",":","[]",",","."]}},"paramCount":0,"sloc":{"logical":14,"physical":17},"errors":[],"lineEnd":88,"lineStart":72,"name":"<anon method-6>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":5.556,"halstead":{"bugs":0.1,"difficulty":6.857,"effort":2052.482,"length":61,"time":114.027,"vocabulary":30,"volume":299.32,"operands":{"distinct":21,"total":32,"identifiers":["filename","\"should-support-rejecting-promises.test.js\"","template","makeTemplate","\n    test('should support rejecting promises', async () => {\n      await expect(Promise.reject(new Error('octopus')))\n        .rejects.toThrowErrorMatchingInlineSnapshot();\n    });\n  ","writeFiles","TESTS_DIR","stderr","exitCode","runJest","DIR","\"-w=1\"","\"--ci=false\"","fileAfter","readFile","expect","toMatch","\"1 snapshot written from 1 test suite.\"","toMatchSnapshot","toBe","0"]},"operators":{"distinct":9,"total":29,"identifiers":["const","=","()","``","{}",":","[]",",","."]}},"paramCount":0,"sloc":{"logical":18,"physical":16},"errors":[],"lineEnd":105,"lineStart":90,"name":"<anon method-7>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]}]