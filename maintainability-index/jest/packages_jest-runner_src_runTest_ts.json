[{"cyclomatic":1,"cyclomaticDensity":50,"halstead":{"bugs":0.008,"difficulty":1.5,"effort":36,"length":8,"time":2,"vocabulary":8,"volume":24,"operands":{"distinct":5,"total":5,"identifiers":["testConsole","_log","fakeConsolePush","_type","message"]},"operators":{"distinct":3,"total":3,"identifiers":["=",".","function"]}},"paramCount":2,"sloc":{"logical":2,"physical":30},"errors":[],"lineEnd":66,"lineStart":37,"name":"freezeConsole","paramNames":["testConsole","config"],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":12.5,"halstead":{"bugs":0.089,"difficulty":5.438,"effort":1453.731,"length":53,"time":80.763,"vocabulary":33,"volume":267.353,"operands":{"distinct":24,"total":29,"identifiers":["error","ErrorWithStack","chalk","red","bold","\"Cannot log after tests are done.\""," Did you forget to wait for something async in your test?","message","\nAttempted to log \"","\".","fakeConsolePush","formattedError","formatExecError","config","noStackTrace","false","undefined","true","process","stderr","write","\n","exitCode","1"]},"operators":{"distinct":9,"total":24,"identifiers":["const","=","new","``","${}","()",".","{}",":"]}},"paramCount":2,"sloc":{"logical":8,"physical":24},"errors":[],"lineEnd":65,"lineStart":42,"name":"fakeConsolePush","paramNames":["_type","message"],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":26,"cyclomaticDensity":18.056,"halstead":{"bugs":1.675,"difficulty":37.79,"effort":189851.083,"length":665,"time":10547.282,"vocabulary":188,"volume":5023.802,"operands":{"distinct":155,"total":355,"identifiers":["Promise","RunTestInternalResult","testSource","fs","readFileSync","path","\"utf8\"","docblockPragmas","docblock","parse","extract","customEnvironment","\"jest-environment\"","testEnvironment","projectConfig","Array","isArray","Error","join","\", \"","You can only define a single test environment through docblocks, got \"","\"","resolveTestEnvironment","requireResolveFunction","require","resolve","cacheFS","Map","transformer","createScriptTransformer","TestEnvironment","JestEnvironment","requireAndTranspileModule","testFramework","TestFramework","process","env","JEST_JASMINE","\"1\"","\"jest-jasmine2\"","testRunner","Runtime","RuntimeClass","interopRequireDefault","runtime","\"jest-runtime\"","default","consoleOut","globalConfig","useStderr","stderr","stdout","consoleFormatter","type","message","testConsole","silent","NullConsole","verbose","CustomConsole","BufferedConsole","extraTestEnvironmentOptions","docblockEnvironmentOptions","\"jest-environment-options\"","\"string\"","JSON","environment","testEnvironmentOptions","console","testPath","getVmContext","\"function\"","error","Test environment found at \"","\" does not export a \"getVmContext\" method, which is mandatory from Jest 27. This method is a replacement for \"runScript\".","exit","1","leakDetector","detectLeaks","LeakDetector","null","setGlobal","global","\"console\"","resolver","changedFiles","context","collectCoverage","collectCoverageFrom","collectCoverageOnlyFrom","coverageProvider","sourcesRelatedToTestsInChangedFiles","start","Date","now","setupFiles","esm","unstable_shouldLoadAsEsm","unstable_importModule","setupFile","requireModule","sourcemapOptions","sourcemapSupport","Options","\"node\"","handleUncaughtExceptions","false","retrieveSourceMap","source","requireInternalModule","\"source-map-support\"","install","realExit","args","collectV8Coverage","\"v8\"","setup","result","TestResult","sendMessageToJest","err","stack","stopCollectingV8Coverage","freezeConsole","testCount","numPassingTests","numFailingTests","numPendingTests","numTodoTests","end","testRuntime","perfStats","slow","1000","slowTestThreshold","testFilePath","getBuffer","skipped","displayName","coverage","getAllCoverageInfoCopy","coverageKeys","Object","keys","length","v8Coverage","getAllV8CoverageInfoCopy","0","logHeapUsage","globalThis","gc","memoryUsage","heapUsed","teardown","resetRetrieveHandlers"]},"operators":{"distinct":33,"total":310,"identifiers":["const","=","()",".","[]","let","if","throw","new","``","${}","{}","... (spread)",":",",",":?","===","function=>","else","typeof (prefix)","!==","forof","&&","function","... (rest)","try","finally","catch","+","-",">","/","return"]}},"paramCount":6,"sloc":{"logical":144,"physical":282},"errors":[],"lineEnd":358,"lineStart":77,"name":"runTestInternal","paramNames":["path","globalConfig","projectConfig","resolver","context","sendMessageToJest"],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":33.333,"halstead":{"bugs":0.014,"difficulty":1.5,"effort":62.27,"length":12,"time":3.459,"vocabulary":11,"volume":41.513,"operands":{"distinct":8,"total":8,"identifiers":["getConsoleOutput","BufferedConsole","write","type","message","4","projectConfig","globalConfig"]},"operators":{"distinct":3,"total":4,"identifiers":["()",".","[]"]}},"paramCount":2,"sloc":{"logical":3,"physical":7},"errors":[],"lineEnd":130,"lineStart":124,"name":"<anon method-1>","paramNames":["type","message"],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":2,"cyclomaticDensity":18.182,"halstead":{"bugs":0.048,"difficulty":6.154,"effort":890.794,"length":32,"time":49.489,"vocabulary":23,"volume":144.754,"operands":{"distinct":13,"total":16,"identifiers":["sourceMapSource","runtime","getSourceMaps","get","source","map","JSON","parse","fs","readFileSync","\"utf8\"","url","null"]},"operators":{"distinct":10,"total":16,"identifiers":["const","=","()",".","if","try","return","{}",":","catch"]}},"paramCount":1,"sloc":{"logical":11,"physical":13},"errors":[],"lineEnd":232,"lineStart":220,"name":"<anon method-2>","paramNames":["source"],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":12.5,"halstead":{"bugs":0.065,"difficulty":6.368,"effort":1249.966,"length":40,"time":69.443,"vocabulary":30,"volume":196.276,"operands":{"distinct":19,"total":22,"identifiers":["error","ErrorWithStack","args","join","\", \"","process.exit called with \"","\"","exit","formattedError","formatExecError","projectConfig","noStackTrace","false","undefined","true","process","stderr","write","realExit"]},"operators":{"distinct":11,"total":18,"identifiers":["const","=","new","``","${}","()",".","{}",":","return","... (spread)"]}},"paramCount":1,"sloc":{"logical":8,"physical":18},"errors":[],"lineEnd":269,"lineStart":252,"name":"exit","paramNames":["args"],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":50,"halstead":{"bugs":0.002,"difficulty":1,"effort":4.755,"length":3,"time":0.264,"vocabulary":3,"volume":4.755,"operands":{"distinct":1,"total":1,"identifiers":["setImmediate"]},"operators":{"distinct":2,"total":2,"identifiers":["()","function=>"]}},"paramCount":1,"sloc":{"logical":2,"physical":3},"errors":[],"lineEnd":351,"lineStart":349,"name":"<anon method-3>","paramNames":["resolve"],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":25,"halstead":{"bugs":0.005,"difficulty":1.667,"effort":27.089,"length":7,"time":1.505,"vocabulary":5,"volume":16.253,"operands":{"distinct":3,"total":5,"identifiers":["resolve","leakDetector","result"]},"operators":{"distinct":2,"total":2,"identifiers":["()","{}"]}},"paramCount":0,"sloc":{"logical":4,"physical":1},"errors":[],"lineEnd":350,"lineStart":350,"name":"<anon method-4>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":2,"cyclomaticDensity":16.667,"halstead":{"bugs":0.06,"difficulty":8,"effort":1448.883,"length":39,"time":80.494,"vocabulary":25,"volume":181.11,"operands":{"distinct":15,"total":24,"identifiers":["Promise","TestResult","leakDetector","result","runTestInternal","path","globalConfig","config","resolver","context","sendMessageToJest","resolve","leaks","isLeaking","false"]},"operators":{"distinct":10,"total":15,"identifiers":["const","=","{}","()","if","else","new","function=>",".","return"]}},"paramCount":6,"sloc":{"logical":12,"physical":29},"errors":[],"lineEnd":388,"lineStart":360,"name":"runTest","paramNames":["path","globalConfig","config","resolver","context","sendMessageToJest"],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":50,"halstead":{"bugs":0.003,"difficulty":0.5,"effort":4,"length":4,"time":0.222,"vocabulary":4,"volume":8,"operands":{"distinct":3,"total":3,"identifiers":["setTimeout","resolve","100"]},"operators":{"distinct":1,"total":1,"identifiers":["()"]}},"paramCount":1,"sloc":{"logical":2,"physical":1},"errors":[],"lineEnd":379,"lineStart":379,"name":"<anon method-5>","paramNames":["resolve"],"maxNestedMethodDepth":0,"nestedMethods":[]}]