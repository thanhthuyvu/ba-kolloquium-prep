[{"cyclomatic":1,"cyclomaticDensity":50,"halstead":{"bugs":0.005,"difficulty":1.333,"effort":21.671,"length":7,"time":1.204,"vocabulary":5,"volume":16.253,"operands":{"distinct":3,"total":4,"identifiers":["cleanup","tempDir","createEmptyPackage"]},"operators":{"distinct":2,"total":3,"identifiers":["()","{}"]}},"paramCount":0,"sloc":{"logical":2,"physical":4},"errors":[],"lineEnd":22,"lineStart":19,"name":"<anon method-1>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":6.25,"halstead":{"bugs":0.11,"difficulty":6.731,"effort":2227.045,"length":64,"time":123.725,"vocabulary":36,"volume":330.875,"operands":{"distinct":26,"total":35,"identifiers":["writeFiles","tempDir","\"__tests__/test.js\"","\n      const invariant = require('invariant');\n      test('haii', () => expect(invariant(false, 'haii')).toBe('haii'));\n    ","\"invariant.js\"","\n      INVALID CODE FRAGMENT THAT WILL BE REMOVED BY THE TRANSFORMER\n      const invariant = (condition, message) => message;\n      module.exports = invariant;\n    ","\"jest.config.js\"","hasteImplModulePath","module.exports = {\n      haste: {\n        hasteImplModulePath: '","',\n      },\n      transform: {'.*\\.js': './third-party/node_modules/transform'},\n    };","\"third-party/node_modules/invariant/index.js\"","\n      const invariant = (condition, message) => {\n        if (!condition) {\n          throw new Error(message);\n        }\n      };\n      module.exports = invariant;\n    ","\"third-party/node_modules/transform/index.js\"","\n      const invariant = require('invariant');\n      module.exports = {\n        process: script => {\n          let threw = false;\n          try {\n            invariant(false, 'this should throw');\n          } catch (e) {\n            threw = true;\n          }\n          if (!threw) {\n            throw new Error('It used the wrong invariant module!');\n          }\n          return {\n            code: script.replace(\n              'INVALID CODE FRAGMENT THAT WILL BE REMOVED BY THE TRANSFORMER',\n              '',\n            ),\n          };\n        },\n      };\n    ","stderr","exitCode","runJest","\"--no-cache\"","\"--no-watchman\"","expect","not","toMatch","\"invariant\"","\"PASS\"","toBe","0"]},"operators":{"distinct":10,"total":29,"identifiers":["()","{}",":","``","${}","const","=","[]",",","."]}},"paramCount":0,"sloc":{"logical":16,"physical":56},"errors":[],"lineEnd":84,"lineStart":29,"name":"<anon method-2>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]}]