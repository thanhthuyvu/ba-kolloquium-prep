[{"cyclomatic":18,"cyclomaticDensity":37.5,"halstead":{"bugs":0.506,"difficulty":23.192,"effort":35187.774,"length":238,"time":1954.876,"vocabulary":83,"volume":1517.259,"operands":{"distinct":60,"total":121,"identifiers":["args","length","1","0","isStringLiteral","isLiteral","2","3","moduleFactory","isFunction","buildCodeFrameError","\"The second argument of `jest.mock` must be an inline function.\n\"","TypeError","ids","Set","NodePath","Identifier","parentScope","parentPath","scope","traverse","IDVisitor","id","name","node","found","false","bindings","true","parent","isAllowedIdentifier","hasGlobal","ALLOWED_IDENTIFIERS","has","/^mock/i","test","/^(?:__)?cov/","binding","path","isVariableDeclarator","initNode","init","constant","isPure","hoistedVariables","add","\"The module factory of `jest.mock()` is not allowed to \"","\"reference any out-of-scope variables.\n\"","Invalid variable access: ","\n","Array","from","join","\", \"","Allowed objects: ",".\n","\"Note: This is a precaution to guard against uninitialized mock \"","\"variables. If it is ensured that the mock is required lazily, \"","\"variable names prefixed with `mock` (case insensitive) are permitted.\n\"","ReferenceError"]},"operators":{"distinct":23,"total":117,"identifiers":["if","else","===",".","return","||","()","[]","const","=","! (prefix)","throw","new","{}","forof","let","while","!==","break","&&","+","``","${}"]}},"paramCount":1,"sloc":{"logical":48,"physical":73},"errors":[],"lineEnd":187,"lineStart":115,"name":"<anon method-1>","paramNames":["args"],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":2,"cyclomaticDensity":100,"halstead":{"bugs":0.013,"difficulty":3,"effort":119.589,"length":12,"time":6.644,"vocabulary":10,"volume":39.863,"operands":{"distinct":5,"total":6,"identifiers":["args","length","1","0","isStringLiteral"]},"operators":{"distinct":5,"total":6,"identifiers":["&&","===",".","()","[]"]}},"paramCount":1,"sloc":{"logical":2,"physical":1},"errors":[],"lineEnd":189,"lineStart":189,"name":"<anon method-2>","paramNames":["args"],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":2,"cyclomaticDensity":100,"halstead":{"bugs":0.013,"difficulty":3,"effort":119.589,"length":12,"time":6.644,"vocabulary":10,"volume":39.863,"operands":{"distinct":5,"total":6,"identifiers":["args","length","1","0","isStringLiteral"]},"operators":{"distinct":5,"total":6,"identifiers":["&&","===",".","()","[]"]}},"paramCount":1,"sloc":{"logical":2,"physical":1},"errors":[],"lineEnd":190,"lineStart":190,"name":"<anon method-3>","paramNames":["args"],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":100,"halstead":{"bugs":0.004,"difficulty":1,"effort":11.61,"length":5,"time":0.645,"vocabulary":5,"volume":11.61,"operands":{"distinct":3,"total":3,"identifiers":["args","length","0"]},"operators":{"distinct":2,"total":2,"identifiers":["===","."]}},"paramCount":1,"sloc":{"logical":1,"physical":2},"errors":[],"lineEnd":192,"lineStart":191,"name":"<anon method-4>","paramNames":["args"],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":10,"cyclomaticDensity":76.923,"halstead":{"bugs":0.139,"difficulty":6.696,"effort":2792.661,"length":85,"time":155.148,"vocabulary":30,"volume":417.086,"operands":{"distinct":23,"total":44,"identifiers":["expression","NodePath","Identifier","MemberExpression","isIdentifier","node","name","JEST_GLOBAL_NAME","scope","hasBinding","true","referencesImport","JEST_GLOBALS_MODULE_NAME","JEST_GLOBALS_MODULE_JEST_EXPORT_NAME","isMemberExpression","computed","get","\"object\"","\"*\"","property","type","\"Identifier\"","false"]},"operators":{"distinct":7,"total":41,"identifiers":["if","&&","()",".","===","! (prefix)","return"]}},"paramCount":1,"sloc":{"logical":13,"physical":35},"errors":[],"lineEnd":236,"lineStart":202,"name":"<anon method-5>","paramNames":["expression"],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":7,"cyclomaticDensity":31.818,"halstead":{"bugs":0.168,"difficulty":10.4,"effort":5227.765,"length":98,"time":290.431,"vocabulary":35,"volume":502.67,"operands":{"distinct":25,"total":52,"identifiers":["NodePath","Expression","expr","isCallExpression","null","callee","get","\"callee\"","args","\"arguments\"","isMemberExpression","node","computed","object","\"object\"","property","\"property\"","Identifier","propertyName","name","jestObjExpr","isJestObject","extractJestObjExprIfHoistable","functionLooksHoistable","FUNCTIONS"]},"operators":{"distinct":10,"total":46,"identifiers":["if","! (prefix)","()",".","return","const","=","||",":?","[]"]}},"paramCount":1,"sloc":{"logical":22,"physical":33},"errors":[],"lineEnd":270,"lineStart":238,"name":"<anon method-6>","paramNames":["expr"],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":2,"cyclomaticDensity":9.524,"halstead":{"bugs":0.107,"difficulty":9.789,"effort":3152.433,"length":65,"time":175.135,"vocabulary":31,"volume":322.023,"operands":{"distinct":19,"total":31,"identifiers":["PluginObj","declareJestObjGetterIdentifier","Identifier","jestObjGetterIdentifier","path","program","visitor","exprStmt","jestObjExpr","extractJestObjExprIfHoistable","get","\"expression\"","replaceWith","callExpression","self","visitBlock","traverse","BlockStatement","block"]},"operators":{"distinct":12,"total":34,"identifiers":["return","{}",":","=",".","this","function=>","const","()","if","[]","function"]}},"paramCount":0,"sloc":{"logical":21,"physical":103},"errors":[],"lineEnd":375,"lineStart":273,"name":"jestHoist","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":2,"cyclomaticDensity":20,"halstead":{"bugs":0.063,"difficulty":7.125,"effort":1345.696,"length":43,"time":74.761,"vocabulary":21,"volume":188.87,"operands":{"distinct":12,"total":19,"identifiers":["jestObjGetterIdentifier","program","scope","generateUidIdentifier","\"getJestObj\"","unshiftContainer","\"body\"","createJestObjectGetter","GETTER_NAME","name","JEST_GLOBALS_MODULE_JEST_EXPORT_NAME","JEST_GLOBALS_MODULE_NAME"]},"operators":{"distinct":9,"total":24,"identifiers":["if",".","this","return","=","()","[]","{}",":"]}},"paramCount":0,"sloc":{"logical":10,"physical":18},"errors":[],"lineEnd":296,"lineStart":279,"name":"<anon method-7>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":8.333,"halstead":{"bugs":0.071,"difficulty":6.469,"effort":1381.837,"length":46,"time":76.769,"vocabulary":25,"volume":213.617,"operands":{"distinct":16,"total":23,"identifiers":["varsHoistPoint","callsHoistPoint","block","unshiftContainer","\"body\"","emptyStatement","traverse","CallExpression","visitCallExpr","VariableDeclarator","visitVariableDeclarator","blacklist","\"BlockStatement\"","remove","callExpr","varDecl"]},"operators":{"distinct":9,"total":23,"identifiers":["const","=","[]",",","()",".","{}",":","function"]}},"paramCount":1,"sloc":{"logical":12,"physical":55},"errors":[],"lineEnd":372,"lineStart":318,"name":"visitBlock","paramNames":["block"],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":5,"cyclomaticDensity":35.714,"halstead":{"bugs":0.088,"difficulty":7.875,"effort":2084.511,"length":57,"time":115.806,"vocabulary":25,"volume":264.7,"operands":{"distinct":16,"total":28,"identifiers":["node","callee","callExpr","isIdentifier","name","self","jestObjGetterIdentifier","mockStmt","getStatementParent","mockStmtParent","parentPath","isBlock","mockStmtNode","remove","callsHoistPoint","insertBefore"]},"operators":{"distinct":9,"total":29,"identifiers":["const","=","{}",":","if","&&","()","===","."]}},"paramCount":1,"sloc":{"logical":14,"physical":20},"errors":[],"lineEnd":352,"lineStart":333,"name":"visitCallExpr","paramNames":["callExpr"],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":3,"cyclomaticDensity":25,"halstead":{"bugs":0.082,"difficulty":7.875,"effort":1938.229,"length":53,"time":107.679,"vocabulary":25,"volume":246.124,"operands":{"distinct":16,"total":28,"identifiers":["hoistedVariables","has","varDecl","node","parentPath","assertVariableDeclaration","kind","declarations","parent","VariableDeclaration","length","1","remove","varsHoistPoint","insertBefore","variableDeclaration"]},"operators":{"distinct":9,"total":25,"identifiers":["if","()",".","const","=","{}","else","===","[]"]}},"paramCount":1,"sloc":{"logical":12,"physical":18},"errors":[],"lineEnd":371,"lineStart":354,"name":"visitVariableDeclarator","paramNames":["varDecl"],"maxNestedMethodDepth":0,"nestedMethods":[]}]