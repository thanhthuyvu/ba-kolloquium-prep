[{"cyclomatic":18,"cyclomaticDensity":69.231,"halstead":{"bugs":0.425,"difficulty":14.695,"effort":18729.804,"length":204,"time":1040.545,"vocabulary":76,"volume":1274.577,"operands":{"distinct":59,"total":102,"identifiers":["true","argv","runInBand","Object","prototype","hasOwnProperty","call","\"maxWorkers\"","Error","\"Both --runInBand and --maxWorkers were specified, but these two \"","\"options do not make sense together. Which is it?\"","key","'onlyChanged'","'lastCommit'","'changedFilesWithAncestor'","'changedSince'","watchAll","Both --"," and --watchAll were specified, but these two ","\"options do not make sense together. Try the --watch option which \"","\"reruns only tests related to changed files.\"","onlyFailures","\"Both --onlyFailures and --watchAll were specified, but these two \"","\"options do not make sense together.\"","findRelatedTests","_","length","0","\"The --findRelatedTests option requires file paths to be specified.\n\"","\"Example usage: jest --findRelatedTests ./src/source.js \"","\"./src/index.js.\"","maxWorkers","undefined","\"The --maxWorkers (-w) option requires a number or string to be specified.\n\"","\"Example usage: jest --maxWorkers 2\n\"","\"Example usage: jest --maxWorkers 50%\n\"","\"Or did you mean --watch?\"","selectProjects","\"The --selectProjects option requires the name of at least one project to be specified.\n\"","\"Example usage: jest --selectProjects my-first-project my-second-project\"","ignoreProjects","\"The --ignoreProjects option requires the name of at least one project to be specified.\n\"","\"Example usage: jest --ignoreProjects my-first-project my-second-project\"","config","isJSONString","match","RegExp","constants","JEST_CONFIG_EXT_ORDER","map","e","join","\"|\"","\\.(",")$","\"i\"","\", \"","The --config option requires a JSON string literal, or a file path with one of these extensions: ",".\nExample usage: jest --config ./jest.config.js"]},"operators":{"distinct":17,"total":102,"identifiers":["if","&&",".","()","throw","new","+","forof","const","[]",",","``","${}","===","! (prefix)","function=>","return"]}},"paramCount":1,"sloc":{"logical":26,"physical":88},"errors":[],"lineEnd":99,"lineStart":12,"name":"check","paramNames":["argv"],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":50,"halstead":{"bugs":0.004,"difficulty":1,"effort":11.61,"length":5,"time":0.645,"vocabulary":5,"volume":11.61,"operands":{"distinct":3,"total":3,"identifiers":["e","substring","1"]},"operators":{"distinct":2,"total":2,"identifiers":["()","."]}},"paramCount":1,"sloc":{"logical":2,"physical":1},"errors":[],"lineEnd":84,"lineStart":84,"name":"<anon method-1>","paramNames":["e"],"maxNestedMethodDepth":0,"nestedMethods":[]}]