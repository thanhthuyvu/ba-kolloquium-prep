[{"cyclomatic":1,"cyclomaticDensity":3.333,"halstead":{"bugs":0.083,"difficulty":1.875,"effort":469.117,"length":60,"time":26.062,"vocabulary":18,"volume":250.196,"operands":{"distinct":16,"total":30,"identifiers":["it","\"should not extract dependencies inside comments\"","\"should not extract dependencies inside comments (windows line endings)\"","\"should not extract dependencies inside comments (unicode line endings)\"","\"should extract dependencies from `import` statements\"","\"should extract dependencies from side-effect only `import` statements\"","\"should not extract dependencies from `import type/typeof` statements\"","\"should extract dependencies from `export` statements\"","\"should extract dependencies from `export-from` statements\"","\"should not extract dependencies from `export type/typeof` statements\"","\"should extract dependencies from dynamic `import` calls\"","\"should extract dependencies from `require` calls\"","\"should extract dependencies from `jest.requireActual` calls\"","\"should extract dependencies from `jest.requireMock` calls\"","\"should extract dependencies from `jest.genMockFromModule` calls\"","\"should extract dependencies from `jest.createMockFromModule` calls\""]},"operators":{"distinct":2,"total":30,"identifiers":["()","function=>"]}},"paramCount":0,"sloc":{"logical":30,"physical":268},"errors":[],"lineEnd":277,"lineStart":10,"name":"<anon method-1>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":25,"halstead":{"bugs":0.021,"difficulty":3.429,"effort":215.683,"length":17,"time":11.982,"vocabulary":13,"volume":62.907,"operands":{"distinct":7,"total":8,"identifiers":["code","\n      // import a from 'ignore-line-comment';\n      // import 'ignore-line-comment';\n      // import './ignore-line-comment';\n      // require('ignore-line-comment');\n      /*\n       * import a from 'ignore-block-comment';\n       * import './ignore-block-comment';\n       * import 'ignore-block-comment';\n       * require('ignore-block-comment');\n       */\n    ","expect","extractor","extract","toEqual","Set"]},"operators":{"distinct":6,"total":9,"identifiers":["const","=","``","()",".","new"]}},"paramCount":0,"sloc":{"logical":4,"physical":15},"errors":[],"lineEnd":25,"lineStart":11,"name":"<anon method-2>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":20,"halstead":{"bugs":0.04,"difficulty":3.792,"effort":450.988,"length":28,"time":25.055,"vocabulary":19,"volume":118.942,"operands":{"distinct":12,"total":13,"identifiers":["code","\"// const module1 = require(\"module1\");\"","\"/**\"","\" * const module2 = require(\"module2\");\"","\" */\"","join","\"\r\n\"","expect","extractor","extract","toEqual","Set"]},"operators":{"distinct":7,"total":15,"identifiers":["const","=","()",".","[]",",","new"]}},"paramCount":0,"sloc":{"logical":5,"physical":10},"errors":[],"lineEnd":36,"lineStart":27,"name":"<anon method-3>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":20,"halstead":{"bugs":0.043,"difficulty":3.769,"effort":488.71,"length":30,"time":27.151,"vocabulary":20,"volume":129.658,"operands":{"distinct":13,"total":14,"identifiers":["code","\"// const module1 = require(\"module1\"); \"","\"// const module1 = require(\"module2\"); \"","\"/* \"","\"const module2 = require(\"module3\"); \"","\" */\"","join","\"\"","expect","extractor","extract","toEqual","Set"]},"operators":{"distinct":7,"total":16,"identifiers":["const","=","()",".","[]",",","new"]}},"paramCount":0,"sloc":{"logical":5,"physical":11},"errors":[],"lineEnd":48,"lineStart":38,"name":"<anon method-4>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":25,"halstead":{"bugs":0.035,"difficulty":4.364,"effort":463.41,"length":25,"time":25.745,"vocabulary":19,"volume":106.198,"operands":{"distinct":11,"total":12,"identifiers":["code","\n      // Good\n      import * as depNS from 'dep1';\n      import {\n        a as aliased_a,\n        b,\n      } from 'dep2';\n      import depDefault from 'dep3';\n      import * as depNS, {\n        a as aliased_a,\n        b,\n      }, depDefault from 'dep4';\n\n      // Bad\n      foo . import ('inv1');\n      foo . export ('inv2');\n    ","expect","extractor","extract","toEqual","Set","\"dep1\"","\"dep2\"","\"dep3\"","\"dep4\""]},"operators":{"distinct":8,"total":13,"identifiers":["const","=","``","()",".","new","[]",","]}},"paramCount":0,"sloc":{"logical":4,"physical":22},"errors":[],"lineEnd":71,"lineStart":50,"name":"<anon method-5>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":25,"halstead":{"bugs":0.029,"difficulty":4.444,"effort":381.497,"length":21,"time":21.194,"vocabulary":17,"volume":85.837,"operands":{"distinct":9,"total":10,"identifiers":["code","\n        // Good\n        import './side-effect-dep1';\n        import 'side-effect-dep2';\n\n        // Bad\n        import ./inv1;\n        import inv2\n      ","expect","extractor","extract","toEqual","Set","\"./side-effect-dep1\"","\"side-effect-dep2\""]},"operators":{"distinct":8,"total":11,"identifiers":["const","=","``","()",".","new","[]",","]}},"paramCount":0,"sloc":{"logical":4,"physical":14},"errors":[],"lineEnd":88,"lineStart":75,"name":"<anon method-6>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":25,"halstead":{"bugs":0.023,"difficulty":4,"effort":274.13,"length":18,"time":15.229,"vocabulary":14,"volume":68.532,"operands":{"distinct":7,"total":8,"identifiers":["code","\n      // Bad\n      import typeof {foo} from 'inv1';\n      import type {foo} from 'inv2';\n    ","expect","extractor","extract","toEqual","Set"]},"operators":{"distinct":7,"total":10,"identifiers":["const","=","``","()",".","new","[]"]}},"paramCount":0,"sloc":{"logical":4,"physical":8},"errors":[],"lineEnd":97,"lineStart":90,"name":"<anon method-7>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":25,"halstead":{"bugs":0.035,"difficulty":4.364,"effort":463.41,"length":25,"time":25.745,"vocabulary":19,"volume":106.198,"operands":{"distinct":11,"total":12,"identifiers":["code","\n      // Good\n      export * as depNS from 'dep1';\n      export {\n        a as aliased_a,\n        b,\n      } from 'dep2';\n      export depDefault from 'dep3';\n      export * as depNS, {\n        a as aliased_a,\n        b,\n      }, depDefault from 'dep4';\n\n      // Bad\n      foo . export ('inv1');\n      foo . export ('inv2');\n    ","expect","extractor","extract","toEqual","Set","\"dep1\"","\"dep2\"","\"dep3\"","\"dep4\""]},"operators":{"distinct":8,"total":13,"identifiers":["const","=","``","()",".","new","[]",","]}},"paramCount":0,"sloc":{"logical":4,"physical":22},"errors":[],"lineEnd":120,"lineStart":99,"name":"<anon method-8>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":25,"halstead":{"bugs":0.035,"difficulty":4.364,"effort":463.41,"length":25,"time":25.745,"vocabulary":19,"volume":106.198,"operands":{"distinct":11,"total":12,"identifiers":["code","\n      // Good\n      export * as depNS from 'dep1';\n      export {\n        a as aliased_a,\n        b,\n      } from 'dep2';\n      export depDefault from 'dep3';\n      export * as depNS, {\n        a as aliased_a,\n        b,\n      }, depDefault from 'dep4';\n\n      // Bad\n      foo . export ('inv1');\n      foo . export ('inv2');\n    ","expect","extractor","extract","toEqual","Set","\"dep1\"","\"dep2\"","\"dep3\"","\"dep4\""]},"operators":{"distinct":8,"total":13,"identifiers":["const","=","``","()",".","new","[]",","]}},"paramCount":0,"sloc":{"logical":4,"physical":22},"errors":[],"lineEnd":143,"lineStart":122,"name":"<anon method-9>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":25,"halstead":{"bugs":0.023,"difficulty":4,"effort":274.13,"length":18,"time":15.229,"vocabulary":14,"volume":68.532,"operands":{"distinct":7,"total":8,"identifiers":["code","\n      // Bad\n      export typeof {foo} from 'inv1';\n      export type {foo} from 'inv2';\n    ","expect","extractor","extract","toEqual","Set"]},"operators":{"distinct":7,"total":10,"identifiers":["const","=","``","()",".","new","[]"]}},"paramCount":0,"sloc":{"logical":4,"physical":8},"errors":[],"lineEnd":152,"lineStart":145,"name":"<anon method-10>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":25,"halstead":{"bugs":0.032,"difficulty":4.4,"effort":421.996,"length":23,"time":23.444,"vocabulary":18,"volume":95.908,"operands":{"distinct":10,"total":11,"identifiers":["code","\n      // Good\n      import('dep1').then();\n      const dep2 = await import(\n        \"dep2\",\n      );\n      if (await import(`dep3`)) {}\n\n      // Bad\n      await foo . import('inv1')\n      await ximport('inv2');\n      importx('inv3');\n      import('inv4', 'inv5');\n    ","expect","extractor","extract","toEqual","Set","\"dep1\"","\"dep2\"","\"dep3\""]},"operators":{"distinct":8,"total":12,"identifiers":["const","=","``","()",".","new","[]",","]}},"paramCount":0,"sloc":{"logical":4,"physical":17},"errors":[],"lineEnd":170,"lineStart":154,"name":"<anon method-11>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":25,"halstead":{"bugs":0.032,"difficulty":4.4,"effort":421.996,"length":23,"time":23.444,"vocabulary":18,"volume":95.908,"operands":{"distinct":10,"total":11,"identifiers":["code","\n      // Good\n      require('dep1');\n      const dep2 = require(\n        \"dep2\",\n      );\n      if (require(`dep3`).cond) {}\n\n      // Bad\n      foo . require('inv1')\n      xrequire('inv2');\n      requirex('inv3');\n      require('inv4', 'inv5');\n    ","expect","extractor","extract","toEqual","Set","\"dep1\"","\"dep2\"","\"dep3\""]},"operators":{"distinct":8,"total":12,"identifiers":["const","=","``","()",".","new","[]",","]}},"paramCount":0,"sloc":{"logical":4,"physical":17},"errors":[],"lineEnd":188,"lineStart":172,"name":"<anon method-12>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":25,"halstead":{"bugs":0.035,"difficulty":4.364,"effort":463.41,"length":25,"time":25.745,"vocabulary":19,"volume":106.198,"operands":{"distinct":11,"total":12,"identifiers":["code","\n      // Good\n      jest.requireActual('dep1');\n      const dep2 = jest.requireActual(\n        \"dep2\",\n      );\n      if (jest.requireActual(`dep3`).cond) {}\n      jest\n        .requireActual('dep4');\n\n      // Bad\n      foo . jest.requireActual('inv1')\n      xjest.requireActual('inv2');\n      jest.requireActualx('inv3');\n      jest.requireActual('inv4', 'inv5');\n    ","expect","extractor","extract","toEqual","Set","\"dep1\"","\"dep2\"","\"dep3\"","\"dep4\""]},"operators":{"distinct":8,"total":13,"identifiers":["const","=","``","()",".","new","[]",","]}},"paramCount":0,"sloc":{"logical":4,"physical":21},"errors":[],"lineEnd":210,"lineStart":190,"name":"<anon method-13>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":25,"halstead":{"bugs":0.035,"difficulty":4.364,"effort":463.41,"length":25,"time":25.745,"vocabulary":19,"volume":106.198,"operands":{"distinct":11,"total":12,"identifiers":["code","\n      // Good\n      jest.requireMock('dep1');\n      const dep2 = jest.requireMock(\n        \"dep2\",\n      );\n      if (jest.requireMock(`dep3`).cond) {}\n      jest\n        .requireMock('dep4');\n\n      // Bad\n      foo . jest.requireMock('inv1')\n      xjest.requireMock('inv2');\n      jest.requireMockx('inv3');\n      jest.requireMock('inv4', 'inv5');\n    ","expect","extractor","extract","toEqual","Set","\"dep1\"","\"dep2\"","\"dep3\"","\"dep4\""]},"operators":{"distinct":8,"total":13,"identifiers":["const","=","``","()",".","new","[]",","]}},"paramCount":0,"sloc":{"logical":4,"physical":21},"errors":[],"lineEnd":232,"lineStart":212,"name":"<anon method-14>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":25,"halstead":{"bugs":0.035,"difficulty":4.364,"effort":463.41,"length":25,"time":25.745,"vocabulary":19,"volume":106.198,"operands":{"distinct":11,"total":12,"identifiers":["code","\n      // Good\n      jest.genMockFromModule('dep1');\n      const dep2 = jest.genMockFromModule(\n        \"dep2\",\n      );\n      if (jest.genMockFromModule(`dep3`).cond) {}\n      jest\n        .requireMock('dep4');\n\n      // Bad\n      foo . jest.genMockFromModule('inv1')\n      xjest.genMockFromModule('inv2');\n      jest.genMockFromModulex('inv3');\n      jest.genMockFromModule('inv4', 'inv5');\n    ","expect","extractor","extract","toEqual","Set","\"dep1\"","\"dep2\"","\"dep3\"","\"dep4\""]},"operators":{"distinct":8,"total":13,"identifiers":["const","=","``","()",".","new","[]",","]}},"paramCount":0,"sloc":{"logical":4,"physical":21},"errors":[],"lineEnd":254,"lineStart":234,"name":"<anon method-15>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":25,"halstead":{"bugs":0.035,"difficulty":4.364,"effort":463.41,"length":25,"time":25.745,"vocabulary":19,"volume":106.198,"operands":{"distinct":11,"total":12,"identifiers":["code","\n      // Good\n      jest.createMockFromModule('dep1');\n      const dep2 = jest.createMockFromModule(\n        \"dep2\",\n      );\n      if (jest.createMockFromModule(`dep3`).cond) {}\n      jest\n        .requireMock('dep4');\n\n      // Bad\n     foo . jest.createMockFromModule('inv1')\n      xjest.createMockFromModule('inv2');\n      jest.createMockFromModulex('inv3');\n      jest.createMockFromModule('inv4', 'inv5');\n    ","expect","extractor","extract","toEqual","Set","\"dep1\"","\"dep2\"","\"dep3\"","\"dep4\""]},"operators":{"distinct":8,"total":13,"identifiers":["const","=","``","()",".","new","[]",","]}},"paramCount":0,"sloc":{"logical":4,"physical":21},"errors":[],"lineEnd":276,"lineStart":256,"name":"<anon method-16>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]}]