[{"cyclomatic":1,"cyclomaticDensity":7.143,"halstead":{"bugs":0.072,"difficulty":6.5,"effort":1400.706,"length":47,"time":77.817,"vocabulary":24,"volume":215.493,"operands":{"distinct":16,"total":26,"identifiers":["args","fixtures","alpha","path","join","\"options\"","\"file-alpha\"","beta","\"file-beta\"","theta","\"file-theta\"","it","\"should run tests passed via file first\"","done","\"should run multiple tests passed via file first\"","\"should support having no other test files\""]},"operators":{"distinct":8,"total":21,"identifiers":["var","=","[]","{}",":","()",".","function"]}},"paramCount":0,"sloc":{"logical":14,"physical":60},"errors":[],"lineEnd":67,"lineStart":8,"name":"<anon method-1>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":20,"halstead":{"bugs":0.031,"difficulty":4.55,"effort":427.753,"length":23,"time":23.764,"vocabulary":17,"volume":94.012,"operands":{"distinct":10,"total":13,"identifiers":["args","\"--file\"","resolvePath","fixtures","alpha","fixture","beta","runMochaJSON","err","res"]},"operators":{"distinct":7,"total":10,"identifiers":["=","[]",",","()",".","var","function"]}},"paramCount":1,"sloc":{"logical":5,"physical":14},"errors":[],"lineEnd":29,"lineStart":16,"name":"<anon method-2>","paramNames":["done"],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":2,"cyclomaticDensity":28.571,"halstead":{"bugs":0.028,"difficulty":2.6,"effort":217.781,"length":22,"time":12.099,"vocabulary":14,"volume":83.762,"operands":{"distinct":10,"total":13,"identifiers":["err","done","expect","res","\"to have passed\"","and","\"to have passed test count\"","2","\"to have passed test order\"","\"should be executed first\""]},"operators":{"distinct":4,"total":9,"identifiers":["if","return","()","."]}},"paramCount":2,"sloc":{"logical":7,"physical":9},"errors":[],"lineEnd":28,"lineStart":20,"name":"<anon method-3>","paramNames":["err","res"],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":16.667,"halstead":{"bugs":0.043,"difficulty":5.409,"effort":699.221,"length":31,"time":38.846,"vocabulary":18,"volume":129.268,"operands":{"distinct":11,"total":17,"identifiers":["args","\"--file\"","resolvePath","fixtures","alpha","beta","fixture","theta","runMochaJSON","err","res"]},"operators":{"distinct":7,"total":14,"identifiers":["=","[]",",","()",".","var","function"]}},"paramCount":1,"sloc":{"logical":6,"physical":24},"errors":[],"lineEnd":54,"lineStart":31,"name":"<anon method-4>","paramNames":["done"],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":2,"cyclomaticDensity":28.571,"halstead":{"bugs":0.032,"difficulty":2.5,"effort":240,"length":24,"time":13.333,"vocabulary":16,"volume":96,"operands":{"distinct":12,"total":15,"identifiers":["err","done","expect","res","\"to have passed\"","and","\"to have passed test count\"","3","\"to have passed test order\"","\"should be executed first\"","\"should be executed second\"","\"should be executed third\""]},"operators":{"distinct":4,"total":9,"identifiers":["if","return","()","."]}},"paramCount":2,"sloc":{"logical":7,"physical":14},"errors":[],"lineEnd":53,"lineStart":40,"name":"<anon method-5>","paramNames":["err","res"],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":25,"halstead":{"bugs":0.022,"difficulty":3.333,"effort":221.39,"length":17,"time":12.299,"vocabulary":15,"volume":66.417,"operands":{"distinct":9,"total":10,"identifiers":["args","\"--file\"","resolvePath","fixtures","alpha","runMochaJSON","\"filethatdoesnotexist.js\"","err","res"]},"operators":{"distinct":6,"total":7,"identifiers":["=","[]",",","()",".","function"]}},"paramCount":1,"sloc":{"logical":4,"physical":11},"errors":[],"lineEnd":66,"lineStart":56,"name":"<anon method-6>","paramNames":["done"],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":2,"cyclomaticDensity":33.333,"halstead":{"bugs":0.02,"difficulty":2.5,"effort":152.361,"length":17,"time":8.464,"vocabulary":12,"volume":60.944,"operands":{"distinct":8,"total":10,"identifiers":["err","done","expect","res","\"to have passed\"","and","\"to have passed test count\"","1"]},"operators":{"distinct":4,"total":7,"identifiers":["if","return","()","."]}},"paramCount":2,"sloc":{"logical":6,"physical":7},"errors":[],"lineEnd":65,"lineStart":59,"name":"<anon method-7>","paramNames":["err","res"],"maxNestedMethodDepth":0,"nestedMethods":[]}]