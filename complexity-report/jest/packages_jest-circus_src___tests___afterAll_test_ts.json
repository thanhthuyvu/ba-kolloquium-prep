[{"cyclomatic":1,"cyclomaticDensity":20,"halstead":{"bugs":0.017,"difficulty":4.2,"effort":217.944,"length":15,"time":12.108,"vocabulary":11,"volume":51.891,"operands":{"distinct":5,"total":7,"identifiers":["stdout","runTest","\n    describe('describe', () => {\n      afterAll(() => {});\n      test('one', () => {});\n      test('two', () => {});\n      describe('2nd level describe', () => {\n        afterAll(() => {});\n        test('2nd level test', () => {});\n\n        describe('3rd level describe', () => {\n          test('3rd level test', () => {});\n          test('3rd level test#2', () => {});\n        });\n      });\n    })\n\n    describe('2nd describe', () => {\n      afterAll(() => { throw new Error('alabama'); });\n      test('2nd describe test', () => {});\n    })\n  ","expect","toMatchSnapshot"]},"operators":{"distinct":6,"total":8,"identifiers":["const","=","{}","()","``","."]}},"paramCount":0,"sloc":{"logical":5,"physical":25},"errors":[],"lineEnd":34,"lineStart":10,"name":"<anon method-1>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":25,"halstead":{"bugs":0.017,"difficulty":2.917,"effort":151.35,"length":15,"time":8.408,"vocabulary":11,"volume":51.891,"operands":{"distinct":6,"total":7,"identifiers":["result","runTest","\n    describe('describe', () => {\n      afterEach(() => {});\n      beforeEach(() => {});\n      afterAll(() => {});\n      beforeAll(() => {});\n    })\n  ","expect","stdout","toMatchSnapshot"]},"operators":{"distinct":5,"total":8,"identifiers":["const","=","()","``","."]}},"paramCount":0,"sloc":{"logical":4,"physical":12},"errors":[],"lineEnd":47,"lineStart":36,"name":"<anon method-2>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":25,"halstead":{"bugs":0.017,"difficulty":2.917,"effort":151.35,"length":15,"time":8.408,"vocabulary":11,"volume":51.891,"operands":{"distinct":6,"total":7,"identifiers":["result","runTest","\n    describe('describe', () => {\n      afterEach(() => console.log('> afterEach'));\n      beforeEach(() => console.log('> beforeEach'));\n      afterAll(() => console.log('> afterAll'));\n      beforeAll(() => console.log('> beforeAll'));\n      describe('child describe', () => {\n        test('my test', () => console.log('> my test'));\n      })\n    })\n  ","expect","stdout","toMatchSnapshot"]},"operators":{"distinct":5,"total":8,"identifiers":["const","=","()","``","."]}},"paramCount":0,"sloc":{"logical":4,"physical":14},"errors":[],"lineEnd":62,"lineStart":49,"name":"<anon method-3>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":25,"halstead":{"bugs":0.017,"difficulty":2.917,"effort":151.35,"length":15,"time":8.408,"vocabulary":11,"volume":51.891,"operands":{"distinct":6,"total":7,"identifiers":["result","runTest","\n    describe.skip('describe', () => {\n      afterAll(() => console.log('> afterAll'));\n      beforeAll(() => console.log('> beforeAll'));\n      test('my test', () => console.log('> my test'));\n    })\n  ","expect","stdout","toMatchSnapshot"]},"operators":{"distinct":5,"total":8,"identifiers":["const","=","()","``","."]}},"paramCount":0,"sloc":{"logical":4,"physical":10},"errors":[],"lineEnd":73,"lineStart":64,"name":"<anon method-4>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":25,"halstead":{"bugs":0.017,"difficulty":2.917,"effort":151.35,"length":15,"time":8.408,"vocabulary":11,"volume":51.891,"operands":{"distinct":6,"total":7,"identifiers":["result","runTest","\n    describe.skip('describe', () => {\n      afterAll(() => console.log('> afterAll'));\n      beforeAll(() => console.log('> beforeAll'));\n      test.todo('my test');\n    })\n  ","expect","stdout","toMatchSnapshot"]},"operators":{"distinct":5,"total":8,"identifiers":["const","=","()","``","."]}},"paramCount":0,"sloc":{"logical":4,"physical":10},"errors":[],"lineEnd":84,"lineStart":75,"name":"<anon method-5>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":25,"halstead":{"bugs":0.017,"difficulty":2.917,"effort":151.35,"length":15,"time":8.408,"vocabulary":11,"volume":51.891,"operands":{"distinct":6,"total":7,"identifiers":["result","runTest","\n    describe.skip('describe', () => {\n      afterAll(() => console.log('> afterAll'));\n      beforeAll(() => console.log('> beforeAll'));\n      test.only('my test', () => console.log('> my test'));\n    })\n  ","expect","stdout","toMatchSnapshot"]},"operators":{"distinct":5,"total":8,"identifiers":["const","=","()","``","."]}},"paramCount":0,"sloc":{"logical":4,"physical":10},"errors":[],"lineEnd":95,"lineStart":86,"name":"<anon method-6>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]}]