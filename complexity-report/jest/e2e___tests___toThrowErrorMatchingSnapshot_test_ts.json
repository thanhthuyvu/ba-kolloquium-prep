[{"cyclomatic":1,"cyclomaticDensity":50,"halstead":{"bugs":0.002,"difficulty":0.5,"effort":2.377,"length":3,"time":0.132,"vocabulary":3,"volume":4.755,"operands":{"distinct":2,"total":2,"identifiers":["cleanup","TESTS_DIR"]},"operators":{"distinct":1,"total":1,"identifiers":["()"]}},"paramCount":0,"sloc":{"logical":2,"physical":1},"errors":[],"lineEnd":16,"lineStart":16,"name":"<anon method-1>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":50,"halstead":{"bugs":0.002,"difficulty":0.5,"effort":2.377,"length":3,"time":0.132,"vocabulary":3,"volume":4.755,"operands":{"distinct":2,"total":2,"identifiers":["cleanup","TESTS_DIR"]},"operators":{"distinct":1,"total":1,"identifiers":["()"]}},"paramCount":0,"sloc":{"logical":2,"physical":1},"errors":[],"lineEnd":17,"lineStart":17,"name":"<anon method-2>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":7.143,"halstead":{"bugs":0.078,"difficulty":6.5,"effort":1514.432,"length":49,"time":84.135,"vocabulary":27,"volume":232.989,"operands":{"distinct":18,"total":26,"identifiers":["filename","\"works-fine-when-function-throws-error.test.js\"","template","makeTemplate","test('works fine when function throws error', () => {\n       expect(() => { throw new Error('apple'); })\n         .toThrowErrorMatchingSnapshot();\n    });\n    ","writeFiles","TESTS_DIR","stderr","exitCode","runJest","DIR","\"-w=1\"","\"--ci=false\"","expect","toMatch","\"1 snapshot written from 1 test suite.\"","toBe","0"]},"operators":{"distinct":9,"total":23,"identifiers":["const","=","()","``","{}",":","[]",",","."]}},"paramCount":0,"sloc":{"logical":14,"physical":16},"errors":[],"lineEnd":34,"lineStart":19,"name":"<anon method-3>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":7.143,"halstead":{"bugs":0.078,"difficulty":6.5,"effort":1514.432,"length":49,"time":84.135,"vocabulary":27,"volume":232.989,"operands":{"distinct":18,"total":26,"identifiers":["filename","\"throws-if-tested-function-did-not-throw.test.js\"","template","makeTemplate","test('throws the error if tested function did not throw error', () => {\n      expect(() => {}).toThrowErrorMatchingSnapshot();\n    });\n    ","writeFiles","TESTS_DIR","stderr","exitCode","runJest","DIR","\"-w=1\"","\"--ci=false\"","expect","toMatch","\"Received function did not throw\"","toBe","1"]},"operators":{"distinct":9,"total":23,"identifiers":["const","=","()","``","{}",":","[]",",","."]}},"paramCount":0,"sloc":{"logical":14,"physical":15},"errors":[],"lineEnd":50,"lineStart":36,"name":"<anon method-4>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":7.143,"halstead":{"bugs":0.078,"difficulty":6.5,"effort":1514.432,"length":49,"time":84.135,"vocabulary":27,"volume":232.989,"operands":{"distinct":18,"total":26,"identifiers":["filename","\"accept-custom-snapshot-name.test.js\"","template","makeTemplate","test('accepts custom snapshot name', () => {\n      expect(() => { throw new Error('apple'); })\n        .toThrowErrorMatchingSnapshot('custom-name');\n    });\n    ","writeFiles","TESTS_DIR","stderr","exitCode","runJest","DIR","\"-w=1\"","\"--ci=false\"","expect","toMatch","\"1 snapshot written from 1 test suite.\"","toBe","0"]},"operators":{"distinct":9,"total":23,"identifiers":["const","=","()","``","{}",":","[]",",","."]}},"paramCount":0,"sloc":{"logical":14,"physical":15},"errors":[],"lineEnd":66,"lineStart":52,"name":"<anon method-5>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":7.143,"halstead":{"bugs":0.078,"difficulty":6.5,"effort":1514.432,"length":49,"time":84.135,"vocabulary":27,"volume":232.989,"operands":{"distinct":18,"total":26,"identifiers":["filename","\"cannot-be-used-with-not.test.js\"","template","makeTemplate","test('cannot be used with .not', () => {\n       expect(() => { throw new Error('apple'); })\n         .not\n         .toThrowErrorMatchingSnapshot();\n    });\n    ","writeFiles","TESTS_DIR","stderr","exitCode","runJest","DIR","\"-w=1\"","\"--ci=false\"","expect","toMatch","\"Snapshot matchers cannot be used with not\"","toBe","1"]},"operators":{"distinct":9,"total":23,"identifiers":["const","=","()","``","{}",":","[]",",","."]}},"paramCount":0,"sloc":{"logical":14,"physical":16},"errors":[],"lineEnd":83,"lineStart":68,"name":"<anon method-6>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":5.556,"halstead":{"bugs":0.12,"difficulty":7.4,"effort":2656.969,"length":70,"time":147.609,"vocabulary":35,"volume":359.05,"operands":{"distinct":25,"total":37,"identifiers":["filename","\"should-support-rejecting-promises.test.js\"","template","makeTemplate","test('should support rejecting promises', () => {\n      return expect(Promise.reject(new Error('octopus'))).rejects.toThrowErrorMatchingSnapshot();\n    });\n  ","writeFiles","TESTS_DIR","stderr","exitCode","runJest","DIR","\"-w=1\"","\"--ci=false\"","snapshot","fs","readFileSync","/__snapshots__/",".snap","\"utf8\"","expect","toMatch","\"1 snapshot written from 1 test suite.\"","toMatchSnapshot","toBe","0"]},"operators":{"distinct":10,"total":33,"identifiers":["const","=","()","``","{}",":","[]",",",".","${}"]}},"paramCount":0,"sloc":{"logical":18,"physical":22},"errors":[],"lineEnd":106,"lineStart":85,"name":"<anon method-7>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]}]