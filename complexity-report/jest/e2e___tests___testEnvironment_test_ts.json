[{"cyclomatic":1,"cyclomaticDensity":50,"halstead":{"bugs":0.002,"difficulty":0.5,"effort":2.377,"length":3,"time":0.132,"vocabulary":3,"volume":4.755,"operands":{"distinct":2,"total":2,"identifiers":["cleanup","DIR"]},"operators":{"distinct":1,"total":1,"identifiers":["()"]}},"paramCount":0,"sloc":{"logical":2,"physical":1},"errors":[],"lineEnd":17,"lineStart":17,"name":"<anon method-1>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":50,"halstead":{"bugs":0.002,"difficulty":0.5,"effort":2.377,"length":3,"time":0.132,"vocabulary":3,"volume":4.755,"operands":{"distinct":2,"total":2,"identifiers":["cleanup","DIR"]},"operators":{"distinct":1,"total":1,"identifiers":["()"]}},"paramCount":0,"sloc":{"logical":2,"physical":1},"errors":[],"lineEnd":18,"lineStart":18,"name":"<anon method-2>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":11.111,"halstead":{"bugs":0.056,"difficulty":4,"effort":667.632,"length":38,"time":37.091,"vocabulary":21,"volume":166.908,"operands":{"distinct":15,"total":20,"identifiers":["expect","testFixturePackage","jest","testEnvironment","toEqual","\"node\"","json","result","runWithJson","\"test-environment\"","success","toBe","true","numTotalTests","4"]},"operators":{"distinct":6,"total":18,"identifiers":["()",".","const","=","{}",":"]}},"paramCount":0,"sloc":{"logical":9,"physical":8},"errors":[],"lineEnd":27,"lineStart":20,"name":"<anon method-3>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":7.143,"halstead":{"bugs":0.077,"difficulty":5.4,"effort":1246.066,"length":48,"time":69.226,"vocabulary":28,"volume":230.753,"operands":{"distinct":20,"total":27,"identifiers":["createEmptyPackage","DIR","writeFiles","\"env.js\"","slash","require","resolve","\"jest-environment-node\"","\n      const Node = require('","').default;\n\n      module.exports = class Thing extends Node {\n        constructor(...args) {\n          super(...args);\n\n          this.moduleMocker.mocked = undefined;\n        }\n      };\n    ","\"test.js\"","\n      /**\n       * @jest-environment ./env.js\n       */\n\n      jest.mocked();\n\n      test('halla', () => {\n        expect(globalThis.thing).toBe('nope');\n      });\n    ","exitCode","stderr","runJest","expect","toBe","1","toContain","\"Your test environment does not support `mocked`, please update it.\""]},"operators":{"distinct":8,"total":21,"identifiers":["()","{}",":","``","${}",".","const","="]}},"paramCount":0,"sloc":{"logical":14,"physical":36},"errors":[],"lineEnd":64,"lineStart":29,"name":"<anon method-4>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]}]