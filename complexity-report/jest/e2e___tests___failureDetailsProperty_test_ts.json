[{"cyclomatic":1,"cyclomaticDensity":50,"halstead":{"bugs":0.005,"difficulty":1,"effort":15.51,"length":6,"time":0.862,"vocabulary":6,"volume":15.51,"operands":{"distinct":4,"total":4,"identifiers":["stdout","replace","/at (new Promise \\(<anonymous>\\)|.+:\\d+:\\d+\\)?)/g","\"at <stacktrace>\""]},"operators":{"distinct":2,"total":2,"identifiers":["()","."]}},"paramCount":1,"sloc":{"logical":2,"physical":5},"errors":[],"lineEnd":15,"lineStart":11,"name":"<anon method-1>","paramNames":["stdout"],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":2,"cyclomaticDensity":12.5,"halstead":{"bugs":0.076,"difficulty":7.031,"effort":1599.954,"length":49,"time":88.886,"vocabulary":25,"volume":227.549,"operands":{"distinct":16,"total":25,"identifiers":["stdout","stderr","runJest","\"failureDetails-property\"","\"tests.test.js\"","expect","toStrictEqual","\"\"","output","JSON","parse","removeStackTraces","isJestJasmineRun","toMatchInlineSnapshot","\n      Array [\n        Array [\n          Object {\n            \"actual\": \"\",\n            \"error\": Object {\n              \"matcherResult\": Object {\n                \"actual\": true,\n                \"expected\": false,\n                \"message\": \"expect(received).toBe(expected) // Object.is equality\n\n      Expected: false\n      Received: true\",\n                \"name\": \"toBe\",\n                \"pass\": false,\n              },\n            },\n            \"expected\": \"\",\n            \"matcherName\": \"\",\n            \"message\": \"Error: expect(received).toBe(expected) // Object.is equality\n\n      Expected: false\n      Received: true\",\n            \"passed\": false,\n            \"stack\": \"Error: expect(received).toBe(expected) // Object.is equality\n\n      Expected: false\n      Received: true\n          at <stacktrace>\",\n          },\n        ],\n        Array [\n          Object {\n            \"actual\": \"\",\n            \"error\": Object {\n              \"matcherResult\": Object {\n                \"actual\": true,\n                \"expected\": false,\n                \"message\": \"expect(received).toBe(expected) // Object.is equality\n\n      Expected: false\n      Received: true\",\n                \"name\": \"toBe\",\n                \"pass\": false,\n              },\n            },\n            \"expected\": \"\",\n            \"matcherName\": \"\",\n            \"message\": \"Error: expect(received).toBe(expected) // Object.is equality\n\n      Expected: false\n      Received: true\",\n            \"passed\": false,\n            \"stack\": \"Error: expect(received).toBe(expected) // Object.is equality\n\n      Expected: false\n      Received: true\n          at <stacktrace>\",\n          },\n        ],\n        Array [\n          Object {\n            \"actual\": \"\",\n            \"error\": Object {\n              \"matcherResult\": Object {\n                \"actual\": \"Object {\n        \"p1\": \"hello\",\n        \"p2\": \"world\",\n      }\",\n                \"expected\": \"Object {\n        \"p1\": \"hello\",\n        \"p2\": \"sunshine\",\n      }\",\n                \"message\": \"expect(received).toMatchInlineSnapshot(snapshot)\n\n      Snapshot name: `my test a snapshot failure 1`\n\n      - Snapshot  - 1\n      + Received  + 1\n\n        Object {\n          \"p1\": \"hello\",\n      -   \"p2\": \"sunshine\",\n      +   \"p2\": \"world\",\n        }\",\n                \"name\": \"toMatchInlineSnapshot\",\n                \"pass\": false,\n              },\n            },\n            \"expected\": \"\",\n            \"matcherName\": \"\",\n            \"message\": \"expect(received).toMatchInlineSnapshot(snapshot)\n\n      Snapshot name: `my test a snapshot failure 1`\n\n      - Snapshot  - 1\n      + Received  + 1\n\n        Object {\n          \"p1\": \"hello\",\n      -   \"p2\": \"sunshine\",\n      +   \"p2\": \"world\",\n        }\",\n            \"passed\": false,\n            \"stack\": \"Error: expect(received).toMatchInlineSnapshot(snapshot)\n\n      Snapshot name: `my test a snapshot failure 1`\n\n      - Snapshot  - 1\n      + Received  + 1\n\n        Object {\n          \"p1\": \"hello\",\n      -   \"p2\": \"sunshine\",\n      +   \"p2\": \"world\",\n        }\n          at <stacktrace>\",\n          },\n        ],\n        Array [\n          Object {\n            \"actual\": \"\",\n            \"error\": Object {},\n            \"expected\": \"\",\n            \"matcherName\": \"\",\n            \"message\": \"Error\",\n            \"passed\": false,\n            \"stack\": \"Error: \n          at <stacktrace>\",\n          },\n        ],\n        Array [\n          Object {\n            \"actual\": \"\",\n            \"error\": Object {\n              \"message\": \"expect(received).rejects.toThrowError()\n\n      Received promise resolved instead of rejected\n      Resolved to value: 1\",\n            },\n            \"expected\": \"\",\n            \"matcherName\": \"\",\n            \"message\": \"Error: expect(received).rejects.toThrowError()\n\n      Received promise resolved instead of rejected\n      Resolved to value: 1\",\n            \"passed\": false,\n            \"stack\": \"Error: expect(received).rejects.toThrowError()\n\n      Received promise resolved instead of rejected\n      Resolved to value: 1\n          at <stacktrace>\",\n          },\n        ],\n      ]\n    ","\n      Array [\n        Array [\n          Object {\n            \"matcherResult\": Object {\n              \"actual\": true,\n              \"expected\": false,\n              \"message\": \"expect(received).toBe(expected) // Object.is equality\n\n      Expected: false\n      Received: true\",\n              \"name\": \"toBe\",\n              \"pass\": false,\n            },\n          },\n        ],\n        Array [\n          Object {\n            \"matcherResult\": Object {\n              \"actual\": true,\n              \"expected\": false,\n              \"message\": \"expect(received).toBe(expected) // Object.is equality\n\n      Expected: false\n      Received: true\",\n              \"name\": \"toBe\",\n              \"pass\": false,\n            },\n          },\n        ],\n        Array [\n          Object {\n            \"matcherResult\": Object {\n              \"actual\": \"Object {\n        \"p1\": \"hello\",\n        \"p2\": \"world\",\n      }\",\n              \"expected\": \"Object {\n        \"p1\": \"hello\",\n        \"p2\": \"sunshine\",\n      }\",\n              \"message\": \"expect(received).toMatchInlineSnapshot(snapshot)\n\n      Snapshot name: `my test a snapshot failure 1`\n\n      - Snapshot  - 1\n      + Received  + 1\n\n        Object {\n          \"p1\": \"hello\",\n      -   \"p2\": \"sunshine\",\n      +   \"p2\": \"world\",\n        }\",\n              \"name\": \"toMatchInlineSnapshot\",\n              \"pass\": false,\n            },\n          },\n        ],\n        Array [\n          Object {},\n        ],\n        Array [\n          Object {\n            \"message\": \"expect(received).rejects.toThrowError()\n\n      Received promise resolved instead of rejected\n      Resolved to value: 1\",\n          },\n        ],\n      ]\n    "]},"operators":{"distinct":9,"total":24,"identifiers":["const","=","{}","()","[]",".","if","else","``"]}},"paramCount":0,"sloc":{"logical":16,"physical":241},"errors":[],"lineEnd":257,"lineStart":17,"name":"<anon method-2>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]}]