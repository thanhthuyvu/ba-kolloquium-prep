[{"cyclomatic":1,"cyclomaticDensity":50,"halstead":{"bugs":0.002,"difficulty":0.5,"effort":2.377,"length":3,"time":0.132,"vocabulary":3,"volume":4.755,"operands":{"distinct":2,"total":2,"identifiers":["cleanup","DIR"]},"operators":{"distinct":1,"total":1,"identifiers":["()"]}},"paramCount":0,"sloc":{"logical":2,"physical":1},"errors":[],"lineEnd":17,"lineStart":17,"name":"<anon method-1>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":50,"halstead":{"bugs":0.002,"difficulty":0.5,"effort":2.377,"length":3,"time":0.132,"vocabulary":3,"volume":4.755,"operands":{"distinct":2,"total":2,"identifiers":["cleanup","DIR"]},"operators":{"distinct":1,"total":1,"identifiers":["()"]}},"paramCount":0,"sloc":{"logical":2,"physical":1},"errors":[],"lineEnd":18,"lineStart":18,"name":"<anon method-2>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":5.882,"halstead":{"bugs":0.102,"difficulty":4.923,"effort":1502.758,"length":60,"time":83.487,"vocabulary":34,"volume":305.248,"operands":{"distinct":26,"total":32,"identifiers":["writeFiles","DIR","\".watchmanconfig\"","\"\"","\"/project1.js\"","\"module.exports = {rootDir: './', displayName: 'BACKEND'}\"","\"/project2.js\"","\"__tests__/inBothProjectsTest.js\"","\"test('test', () => {});\"","\"package.json\"","JSON","stringify","jest","projects","\"<rootDir>/project1.js\"","\"<rootDir>/project2.js\"","stdout","runJest","\"--listTests\"","expect","split","\"\n\"","toHaveLength","1","toMatch","\"inBothProjectsTest.js\""]},"operators":{"distinct":8,"total":28,"identifiers":["()","{}",":",".","[]",",","const","="]}},"paramCount":0,"sloc":{"logical":17,"physical":15},"errors":[],"lineEnd":34,"lineStart":20,"name":"<anon method-3>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":1.961,"halstead":{"bugs":0.393,"difficulty":11.63,"effort":13711.039,"length":203,"time":761.724,"vocabulary":56,"volume":1178.893,"operands":{"distinct":46,"total":107,"identifiers":["writeFiles","DIR","\".watchmanconfig\"","\"\"","\"base_config.js\"","\n      module.exports = {\n        haste: {\n          hasteImplModulePath: '<rootDir>/hasteImpl.js',\n        },\n      };\n    ","\"hasteImpl.js\"","\n      const path = require('path');\n      module.exports = {\n        getHasteName(filename) {\n          return filename\n            .substr(filename.lastIndexOf(path.sep) + 1)\n            .replace(/\\.js$/, '');\n        },\n      };\n    ","\"package.json\"","\"{}\"","\"project1/__tests__/file1.test.js\"","\n      const file1 = require('file1');\n      test('file1', () => {});\n    ","\"project1/file1.js\"","SAMPLE_FILE_CONTENT","\"project1/jest.config.js\"","module.exports = {rootDir: './', displayName: 'BACKEND',         haste: {\n              hasteImplModulePath: '<rootDir>/../hasteImpl.js',\n            },}","\"project2/__tests__/file1.test.js\"","\"project2/file1.js\"","\"project2/jest.config.js\"","module.exports = {rootDir: './',         haste: {\n              hasteImplModulePath: '<rootDir>/../hasteImpl.js',\n            },}","\"project3/__tests__/file1.test.js\"","\"project3/file1.js\"","\"project3/jest.config.js\"","module.exports = {rootDir: './', displayName: 'UI',         haste: {\n              hasteImplModulePath: '<rootDir>/../hasteImpl.js',\n            },}","stderr","runJest","\"--no-watchman\"","\"--config\"","expect","toMatch","\"The name `file1` was looked up in the Haste module map. It cannot be resolved, because there exists several different files\"","extractSummary","summary","toMatchSnapshot","\"global_config.js\"","\n      module.exports = {\n        projects: ['project1/', 'project2/', 'project3/'],\n        haste: {\n          hasteImplModulePath: '<rootDir>/hasteImpl.js',\n        },\n      };\n    ","\"-i\"","\"--projects\"","\"project1\"","\"project2\"","\"project3\"","result1","sortLines","rest","result2","toBe"]},"operators":{"distinct":10,"total":96,"identifiers":["()","{}",":","``","let","=","[]",",",".","const"]}},"paramCount":0,"sloc":{"logical":51,"physical":96},"errors":[],"lineEnd":131,"lineStart":36,"name":"<anon method-4>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":5.263,"halstead":{"bugs":0.15,"difficulty":7.931,"effort":3563.09,"length":85,"time":197.949,"vocabulary":39,"volume":449.259,"operands":{"distinct":29,"total":46,"identifiers":["writeFiles","DIR","\".watchmanconfig\"","\"\"","\"package.json\"","\"{}\"","\"project1/__tests__/file1.test.js\"","\n      const file1 = require('../file1');\n      test('file1', () => {});\n    ","\"project1/file1.js\"","SAMPLE_FILE_CONTENT","\"project1/jest.config.js\"","\"module.exports = {rootDir: './'}\"","\"project2/__tests__/file1.test.js\"","\"project2/file1.js\"","\"project2/jest.config.js\"","stdout","verboseOutput","runJest","\"--no-watchman\"","\"xyz321\"","\"--verbose\"","\"--projects\"","\"project1\"","\"project2\"","expect","toContain","\"Pattern: xyz321 - 0 matches\"","\"  6 files checked across 2 projects. \"","\"Run with `--verbose` for more details.\""]},"operators":{"distinct":10,"total":39,"identifiers":["()","{}",":","``","const","=","[]",",",".","+"]}},"paramCount":0,"sloc":{"logical":19,"physical":38},"errors":[],"lineEnd":170,"lineStart":133,"name":"<anon method-5>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":5.882,"halstead":{"bugs":0.101,"difficulty":7.159,"effort":2163.52,"length":61,"time":120.196,"vocabulary":31,"volume":302.206,"operands":{"distinct":22,"total":35,"identifiers":["writeFiles","DIR","\"package.json\"","projectPath","\n        {\n          \"jest\": {\n            \"testMatch\": [\"<rootDir>/packages/somepackage/test.js\"],\n            \"projects\": [\n              \"","\"\n            ]\n          }\n        }\n      ","\"packages/somepackage/package.json\"","\n        {\n          \"jest\": {\n            \"displayName\": \"somepackage\"\n          }\n        }\n      ","\"packages/somepackage/test.js\"","\n        test('1+1', () => {\n          expect(1).toBe(1);\n        });\n      ","stdout","stderr","exitCode","runJest","\"--no-watchman\"","expect","toContain","\"PASS somepackage packages/somepackage/test.js\"","\"Test Suites: 1 passed, 1 total\"","toEqual","\"\"","0"]},"operators":{"distinct":9,"total":26,"identifiers":["()","{}",":","``","${}","const","=","[]","."]}},"paramCount":1,"sloc":{"logical":17,"physical":32},"errors":[],"lineEnd":205,"lineStart":174,"name":"<anon method-6>","paramNames":["projectPath"],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":5.263,"halstead":{"bugs":0.132,"difficulty":6.911,"effort":2736.079,"length":76,"time":152.004,"vocabulary":37,"volume":395.918,"operands":{"distinct":28,"total":43,"identifiers":["writeFiles","DIR","\"package.json\"","projectPath","\n        {\n          \"jest\": {\n            \"projects\": [\n              \"","\"\n            ]\n          }\n        }\n      ","\"packages/p1/package.json\"","\n        {\n          \"jest\": {\n            \"displayName\": \"p1\"\n          }\n        }\n      ","\"packages/p1/test.js\"","\n        test('1+1', () => {\n          expect(1).toBe(1);\n        });\n      ","\"packages/p2/package.json\"","\n        {\n          \"jest\": {\n            \"displayName\": \"p2\"\n          }\n        }\n      ","\"packages/p2/test.js\"","stdout","stderr","exitCode","runJest","\"--no-watchman\"","expect","toContain","displayName","PASS "," ","/test.js","\"Test Suites: 1 passed, 1 total\"","toEqual","\"\"","0"]},"operators":{"distinct":9,"total":33,"identifiers":["()","{}",":","``","${}","const","=","[]","."]}},"paramCount":2,"sloc":{"logical":19,"physical":43},"errors":[],"lineEnd":255,"lineStart":213,"name":"<anon method-7>","paramNames":["projectPath","displayName"],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":3.333,"halstead":{"bugs":0.182,"difficulty":6.333,"effort":3457.64,"length":100,"time":192.091,"vocabulary":44,"volume":545.943,"operands":{"distinct":36,"total":57,"identifiers":["writeFiles","DIR","\"package.json\"","JSON","stringify","jest","projects","\"packages/*\"","\"packages/README.md\"","\"# Packages README\"","\"packages/project1/README.md\"","\"# Project1 README\"","\"packages/project1/__tests__/file1.test.js\"","\n    const file1 = require('../file1');\n    test('file1', () => {});\n    ","\"packages/project1/file1.js\"","SAMPLE_FILE_CONTENT","\"packages/project1/package.json\"","\"{}\"","\"packages/project2/__tests__/file2.test.js\"","\n    const file2 = require('../file2');\n    test('file2', () => {});\n    ","\"packages/project2/file2.js\"","\"packages/project2/package.json\"","exitCode","stdout","stderr","runJest","\"--no-watchman\"","expect","toContain","\"Test Suites: 2 passed, 2 total\"","\"PASS packages/project1/__tests__/file1.test.js\"","\"PASS packages/project2/__tests__/file2.test.js\"","\"Ran all test suites in 2 projects.\"","toEqual","\"\"","0"]},"operators":{"distinct":8,"total":43,"identifiers":["()","{}",":",".","[]","``","const","="]}},"paramCount":0,"sloc":{"logical":30,"physical":32},"errors":[],"lineEnd":289,"lineStart":258,"name":"<anon method-8>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":4.545,"halstead":{"bugs":0.125,"difficulty":7.167,"effort":2687.5,"length":75,"time":149.306,"vocabulary":32,"volume":375,"operands":{"distinct":24,"total":43,"identifiers":["writeFiles","DIR","\"__tests__/file1.test.js\"","\n      test('foo', () => {});\n    ","\"__tests__/file2.test.js\"","\n      test('bar', () => {});\n    ","\"jest.config.js\"","module.exports = {\n      projects: [\n        { testMatch: ['<rootDir>/__tests__/file1.test.js'] },\n        { testMatch: ['<rootDir>/__tests__/file2.test.js'] },\n      ]\n    };","\"package.json\"","\"{}\"","stdout","stderr","exitCode","runJest","\"--no-watchman\"","expect","toContain","\"Test Suites: 2 passed, 2 total\"","\"PASS __tests__/file1.test.js\"","\"PASS __tests__/file2.test.js\"","\"Ran all test suites in 2 projects.\"","toEqual","\"\"","0"]},"operators":{"distinct":8,"total":32,"identifiers":["()","{}",":","``","const","=","[]","."]}},"paramCount":0,"sloc":{"logical":22,"physical":25},"errors":[],"lineEnd":315,"lineStart":291,"name":"<anon method-9>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":5.882,"halstead":{"bugs":0.091,"difficulty":6.6,"effort":1808.527,"length":57,"time":100.474,"vocabulary":28,"volume":274.019,"operands":{"distinct":20,"total":33,"identifiers":["writeFiles","DIR","\"__tests__/file1.test.js\"","\n      test('foo', () => {});\n    ","\"jest.config.js\"","module.exports = {\n      projects: [\n        { testMatch: ['<rootDir>/__tests__/file1.test.js'] },\n      ]\n    };","\"package.json\"","\"{}\"","stdout","stderr","exitCode","runJest","\"--no-watchman\"","expect","toContain","\"PASS __tests__/file1.test.js\"","\"Test Suites: 1 passed, 1 total\"","toEqual","\"\"","0"]},"operators":{"distinct":8,"total":24,"identifiers":["()","{}",":","``","const","=","[]","."]}},"paramCount":0,"sloc":{"logical":17,"physical":19},"errors":[],"lineEnd":335,"lineStart":317,"name":"<anon method-10>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":1.25,"halstead":{"bugs":0.566,"difficulty":14.34,"effort":24342.191,"length":284,"time":1352.344,"vocabulary":63,"volume":1697.547,"operands":{"distinct":53,"total":152,"identifiers":["writeFiles","DIR","\".watchmanconfig\"","\"\"","\"package.json\"","JSON","stringify","jest","projects","\"project1.conf.json\"","\"<rootDir>/project2/project2.conf.json\"","id","\"project1\"","rootDir","\"./project1\"","setupFiles","\"<rootDir>/project1_setup.js\"","testEnvironment","\"node\"","\"project1/__tests__/test.test.js\"","\"test('project1', () => expect(globalThis.project1).toBe(true))\"","\"project1/project1_setup.js\"","\"global.project1 = true;\"","\"project2/__tests__/test.test.js\"","\"test('project2', () => expect(globalThis.project2).toBe(true))\"","\"project2/project2.conf.json\"","\"project2\"","\"../\"","\"<rootDir>/project2/project2_setup.js\"","testPathIgnorePatterns","\"project2/project2_setup.js\"","\"global.project2 = true;\"","stderr","runJest","\"--no-watchman\"","expect","toMatch","\"Ran all test suites in 2 projects.\"","\"PASS project1/__tests__/test.test.js\"","\"PASS project2/__tests__/test.test.js\"","\"dir1/random_file\"","\"dir2/random_file\"","\"**/*.conf.json\"","\"dir1\"","\"dir2\"","/Whoops! Two projects resolved to the same config path/","path","join","/Project 1|2: dir1/","/Project 1|2: dir2/","\"banana\"","\"Can't find a root directory while resolving a config file path.\"","/banana/"]},"operators":{"distinct":10,"total":132,"identifiers":["()","{}",":",".","[]",",","let","=","``","${}"]}},"paramCount":0,"sloc":{"logical":80,"physical":99},"errors":[],"lineEnd":435,"lineStart":337,"name":"<anon method-11>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":5.263,"halstead":{"bugs":0.135,"difficulty":5.952,"effort":2407.228,"length":76,"time":133.735,"vocabulary":40,"volume":404.467,"operands":{"distinct":31,"total":41,"identifiers":["writeFiles","DIR","\".watchmanconfig\"","\"\"","\"file.js\"","SAMPLE_FILE_CONTENT","\"package.json\"","\"{}\"","\"project1/__tests__/project1.test.js\"","\n      const file = require('../../file.js');\n      test('file', () => expect(file).toBe('PROJECT1'));\n    ","\"project1/jest.config.js\"","\n      module.exports = {\n        rootDir: './',\n        transform: {'file\\.js': './transformer.js'},\n      };","\"project1/transformer.js\"","\n      module.exports = {\n        process: () => ({code: 'module.exports = \"PROJECT1\";'}),\n        getCacheKey: () => 'PROJECT1_CACHE_KEY',\n      }\n    ","\"project2/__tests__/project2.test.js\"","\n      const file = require('../../file.js');\n      test('file', () => expect(file).toBe('PROJECT2'));\n    ","\"project2/jest.config.js\"","\"project2/transformer.js\"","\n      module.exports = {\n        process: () => ({code: 'module.exports = \"PROJECT2\";'}),\n        getCacheKey: () => 'PROJECT2_CACHE_KEY',\n      }\n    ","stderr","runJest","\"--no-watchman\"","\"-i\"","\"--projects\"","\"project1\"","\"project2\"","expect","toMatch","\"Ran all test suites in 2 projects.\"","\"PASS project1/__tests__/project1.test.js\"","\"PASS project2/__tests__/project2.test.js\""]},"operators":{"distinct":9,"total":35,"identifiers":["()","{}",":","``","const","=","[]",",","."]}},"paramCount":0,"sloc":{"logical":19,"physical":49},"errors":[],"lineEnd":485,"lineStart":437,"name":"<anon method-12>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":25,"halstead":{"bugs":0.006,"difficulty":1.333,"effort":24.767,"length":8,"time":1.376,"vocabulary":5,"volume":18.575,"operands":{"distinct":3,"total":4,"identifiers":["test","\"external config files\"","\"inline config files\""]},"operators":{"distinct":2,"total":4,"identifiers":["()","function=>"]}},"paramCount":0,"sloc":{"logical":4,"physical":88},"errors":[],"lineEnd":574,"lineStart":487,"name":"<anon method-13>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":2.632,"halstead":{"bugs":0.284,"difficulty":8.571,"effort":7293.118,"length":150,"time":405.173,"vocabulary":51,"volume":850.864,"operands":{"distinct":42,"total":80,"identifiers":["writeFiles","DIR","\".watchmanconfig\"","\"\"","\"file.js\"","\"module.exports = \"file1\"\"","\"file.p2.js\"","\"module.exports = \"file2\"\"","\"package.json\"","\"{}\"","\"project1/__tests__/project1.test.js\"","\n      const file = require('../../file');\n      test('file 1', () => expect(file).toBe('file1'));\n    ","\"project1/jest.config.js\"","\n      module.exports = {\n        rootDir: '..',\n      };","\"project2/__tests__/project2.test.js\"","\n      const file = require('../../file');\n      test('file 2', () => expect(file).toBe('file2'));\n    ","\"project2/jest.config.js\"","\n      module.exports = {\n        rootDir: '..',\n        moduleFileExtensions: ['p2.js', 'js']\n      };","configs","getConfig","\"--projects\"","\"project1\"","\"project2\"","expect","toHaveLength","2","id","id1","id2","toEqual","any","String","32","not","stderr","runJest","\"--no-watchman\"","\"-w=2\"","toMatch","\"Ran all test suites in 2 projects.\"","\"PASS project1/__tests__/project1.test.js\"","\"PASS project2/__tests__/project2.test.js\""]},"operators":{"distinct":9,"total":70,"identifiers":["()","{}",":","``","const","=","[]",",","."]}},"paramCount":0,"sloc":{"logical":38,"physical":49},"errors":[],"lineEnd":536,"lineStart":488,"name":"<anon method-14>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":2.5,"halstead":{"bugs":0.28,"difficulty":8.341,"effort":7014.625,"length":149,"time":389.701,"vocabulary":50,"volume":840.935,"operands":{"distinct":41,"total":76,"identifiers":["writeFiles","DIR","\".watchmanconfig\"","\"\"","\"file.js\"","\"module.exports = \"file1\"\"","\"file.p2.js\"","\"module.exports = \"file2\"\"","\"package.json\"","JSON","stringify","jest","projects","moduleFileExtensions","\"p2.js\"","\"js\"","\"project1/__tests__/project1.test.js\"","\n      const file = require('../../file');\n      test('file 1', () => expect(file).toBe('file1'));\n    ","\"project2/__tests__/project2.test.js\"","\n      const file = require('../../file');\n      test('file 2', () => expect(file).toBe('file2'));\n    ","configs","getConfig","expect","toHaveLength","2","id","id1","id2","toEqual","any","String","32","not","stderr","runJest","\"--no-watchman\"","\"-w=2\"","toMatch","\"Ran all test suites in 2 projects.\"","\"PASS project1/__tests__/project1.test.js\"","\"PASS project2/__tests__/project2.test.js\""]},"operators":{"distinct":9,"total":73,"identifiers":["()","{}",":",".","[]",",","``","const","="]}},"paramCount":0,"sloc":{"logical":40,"physical":36},"errors":[],"lineEnd":573,"lineStart":538,"name":"<anon method-15>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":8.333,"halstead":{"bugs":0.025,"difficulty":1.714,"effort":130.42,"length":24,"time":7.246,"vocabulary":9,"volume":76.078,"operands":{"distinct":7,"total":12,"identifiers":["it","\"Prj-1 works individually\"","\"Prj-2 works individually\"","\"Prj-3 works individually\"","\"Prj-4 works individually\"","\"Prj-5 works individually\"","\"All project work when running from multiproject\""]},"operators":{"distinct":2,"total":12,"identifiers":["()","function=>"]}},"paramCount":0,"sloc":{"logical":12,"physical":37},"errors":[],"lineEnd":612,"lineStart":576,"name":"<anon method-16>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":16.667,"halstead":{"bugs":0.03,"difficulty":2.6,"effort":237.579,"length":24,"time":13.199,"vocabulary":14,"volume":91.377,"operands":{"distinct":10,"total":13,"identifiers":["result","runJest","\"multi-project-babel/prj-1\"","expect","stderr","toMatch","\"PASS ./index.test.js\"","exitCode","toBe","0"]},"operators":{"distinct":4,"total":11,"identifiers":["const","=","()","."]}},"paramCount":0,"sloc":{"logical":6,"physical":5},"errors":[],"lineEnd":581,"lineStart":577,"name":"<anon method-17>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":16.667,"halstead":{"bugs":0.03,"difficulty":2.6,"effort":237.579,"length":24,"time":13.199,"vocabulary":14,"volume":91.377,"operands":{"distinct":10,"total":13,"identifiers":["result","runJest","\"multi-project-babel/prj-2\"","expect","stderr","toMatch","\"PASS ./index.test.js\"","exitCode","toBe","0"]},"operators":{"distinct":4,"total":11,"identifiers":["const","=","()","."]}},"paramCount":0,"sloc":{"logical":6,"physical":5},"errors":[],"lineEnd":586,"lineStart":582,"name":"<anon method-18>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":16.667,"halstead":{"bugs":0.03,"difficulty":2.6,"effort":237.579,"length":24,"time":13.199,"vocabulary":14,"volume":91.377,"operands":{"distinct":10,"total":13,"identifiers":["result","runJest","\"multi-project-babel/prj-3\"","expect","stderr","toMatch","\"PASS src/index.test.js\"","exitCode","toBe","0"]},"operators":{"distinct":4,"total":11,"identifiers":["const","=","()","."]}},"paramCount":0,"sloc":{"logical":6,"physical":5},"errors":[],"lineEnd":591,"lineStart":587,"name":"<anon method-19>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":16.667,"halstead":{"bugs":0.03,"difficulty":2.6,"effort":237.579,"length":24,"time":13.199,"vocabulary":14,"volume":91.377,"operands":{"distinct":10,"total":13,"identifiers":["result","runJest","\"multi-project-babel/prj-4\"","expect","stderr","toMatch","\"PASS src/index.test.js\"","exitCode","toBe","0"]},"operators":{"distinct":4,"total":11,"identifiers":["const","=","()","."]}},"paramCount":0,"sloc":{"logical":6,"physical":5},"errors":[],"lineEnd":596,"lineStart":592,"name":"<anon method-20>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":16.667,"halstead":{"bugs":0.03,"difficulty":2.6,"effort":237.579,"length":24,"time":13.199,"vocabulary":14,"volume":91.377,"operands":{"distinct":10,"total":13,"identifiers":["result","runJest","\"multi-project-babel/prj-5\"","expect","stderr","toMatch","\"PASS src/index.test.js\"","exitCode","toBe","0"]},"operators":{"distinct":4,"total":11,"identifiers":["const","=","()","."]}},"paramCount":0,"sloc":{"logical":6,"physical":5},"errors":[],"lineEnd":601,"lineStart":597,"name":"<anon method-21>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":6.25,"halstead":{"bugs":0.096,"difficulty":5.429,"effort":1561.935,"length":69,"time":86.774,"vocabulary":18,"volume":287.725,"operands":{"distinct":14,"total":38,"identifiers":["result","runJest","\"multi-project-babel\"","expect","stderr","toMatch","\"PASS prj-1/index.test.js\"","\"PASS prj-2/index.test.js\"","\"PASS prj-3/src/index.test.js\"","\"PASS prj-4/src/index.test.js\"","\"PASS prj-5/src/index.test.js\"","exitCode","toBe","0"]},"operators":{"distinct":4,"total":31,"identifiers":["const","=","()","."]}},"paramCount":0,"sloc":{"logical":16,"physical":10},"errors":[],"lineEnd":611,"lineStart":602,"name":"<anon method-22>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]}]